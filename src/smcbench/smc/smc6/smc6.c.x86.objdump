
smc6.x86.out:     file format elf32-i386


Disassembly of section .init:

000003e4 <_init>:
 3e4:	53                   	push   %ebx
 3e5:	83 ec 08             	sub    $0x8,%esp
 3e8:	e8 d3 00 00 00       	call   4c0 <__x86.get_pc_thunk.bx>
 3ed:	81 c3 df 1b 00 00    	add    $0x1bdf,%ebx
 3f3:	8b 83 28 00 00 00    	mov    0x28(%ebx),%eax
 3f9:	85 c0                	test   %eax,%eax
 3fb:	74 05                	je     402 <_init+0x1e>
 3fd:	e8 76 00 00 00       	call   478 <__gmon_start__@plt>
 402:	83 c4 08             	add    $0x8,%esp
 405:	5b                   	pop    %ebx
 406:	c3                   	ret    

Disassembly of section .plt:

00000410 <.plt>:
 410:	ff b3 04 00 00 00    	pushl  0x4(%ebx)
 416:	ff a3 08 00 00 00    	jmp    *0x8(%ebx)
 41c:	00 00                	add    %al,(%eax)
	...

00000420 <mprotect@plt>:
 420:	ff a3 0c 00 00 00    	jmp    *0xc(%ebx)
 426:	68 00 00 00 00       	push   $0x0
 42b:	e9 e0 ff ff ff       	jmp    410 <.plt>

00000430 <exit@plt>:
 430:	ff a3 10 00 00 00    	jmp    *0x10(%ebx)
 436:	68 08 00 00 00       	push   $0x8
 43b:	e9 d0 ff ff ff       	jmp    410 <.plt>

00000440 <strlen@plt>:
 440:	ff a3 14 00 00 00    	jmp    *0x14(%ebx)
 446:	68 10 00 00 00       	push   $0x10
 44b:	e9 c0 ff ff ff       	jmp    410 <.plt>

00000450 <__libc_start_main@plt>:
 450:	ff a3 18 00 00 00    	jmp    *0x18(%ebx)
 456:	68 18 00 00 00       	push   $0x18
 45b:	e9 b0 ff ff ff       	jmp    410 <.plt>

00000460 <write@plt>:
 460:	ff a3 1c 00 00 00    	jmp    *0x1c(%ebx)
 466:	68 20 00 00 00       	push   $0x20
 46b:	e9 a0 ff ff ff       	jmp    410 <.plt>

Disassembly of section .plt.got:

00000470 <__cxa_finalize@plt>:
 470:	ff a3 24 00 00 00    	jmp    *0x24(%ebx)
 476:	66 90                	xchg   %ax,%ax

00000478 <__gmon_start__@plt>:
 478:	ff a3 28 00 00 00    	jmp    *0x28(%ebx)
 47e:	66 90                	xchg   %ax,%ax

Disassembly of section .text:

00000480 <_start>:
 480:	31 ed                	xor    %ebp,%ebp
 482:	5e                   	pop    %esi
 483:	89 e1                	mov    %esp,%ecx
 485:	83 e4 f0             	and    $0xfffffff0,%esp
 488:	50                   	push   %eax
 489:	54                   	push   %esp
 48a:	52                   	push   %edx
 48b:	e8 22 00 00 00       	call   4b2 <_start+0x32>
 490:	81 c3 3c 1b 00 00    	add    $0x1b3c,%ebx
 496:	8d 83 e4 e8 ff ff    	lea    -0x171c(%ebx),%eax
 49c:	50                   	push   %eax
 49d:	8d 83 84 e8 ff ff    	lea    -0x177c(%ebx),%eax
 4a3:	50                   	push   %eax
 4a4:	51                   	push   %ecx
 4a5:	56                   	push   %esi
 4a6:	ff b3 2c 00 00 00    	pushl  0x2c(%ebx)
 4ac:	e8 9f ff ff ff       	call   450 <__libc_start_main@plt>
 4b1:	f4                   	hlt    
 4b2:	8b 1c 24             	mov    (%esp),%ebx
 4b5:	c3                   	ret    
 4b6:	66 90                	xchg   %ax,%ax
 4b8:	66 90                	xchg   %ax,%ax
 4ba:	66 90                	xchg   %ax,%ax
 4bc:	66 90                	xchg   %ax,%ax
 4be:	66 90                	xchg   %ax,%ax

000004c0 <__x86.get_pc_thunk.bx>:
 4c0:	8b 1c 24             	mov    (%esp),%ebx
 4c3:	c3                   	ret    
 4c4:	66 90                	xchg   %ax,%ax
 4c6:	66 90                	xchg   %ax,%ax
 4c8:	66 90                	xchg   %ax,%ax
 4ca:	66 90                	xchg   %ax,%ax
 4cc:	66 90                	xchg   %ax,%ax
 4ce:	66 90                	xchg   %ax,%ax

000004d0 <deregister_tm_clones>:
 4d0:	e8 e4 00 00 00       	call   5b9 <__x86.get_pc_thunk.dx>
 4d5:	81 c2 f7 1a 00 00    	add    $0x1af7,%edx
 4db:	8d 8a 40 00 00 00    	lea    0x40(%edx),%ecx
 4e1:	8d 82 40 00 00 00    	lea    0x40(%edx),%eax
 4e7:	39 c8                	cmp    %ecx,%eax
 4e9:	74 1d                	je     508 <deregister_tm_clones+0x38>
 4eb:	8b 82 20 00 00 00    	mov    0x20(%edx),%eax
 4f1:	85 c0                	test   %eax,%eax
 4f3:	74 13                	je     508 <deregister_tm_clones+0x38>
 4f5:	55                   	push   %ebp
 4f6:	89 e5                	mov    %esp,%ebp
 4f8:	83 ec 14             	sub    $0x14,%esp
 4fb:	51                   	push   %ecx
 4fc:	ff d0                	call   *%eax
 4fe:	83 c4 10             	add    $0x10,%esp
 501:	c9                   	leave  
 502:	c3                   	ret    
 503:	90                   	nop
 504:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
 508:	f3 c3                	repz ret 
 50a:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi

00000510 <register_tm_clones>:
 510:	e8 a4 00 00 00       	call   5b9 <__x86.get_pc_thunk.dx>
 515:	81 c2 b7 1a 00 00    	add    $0x1ab7,%edx
 51b:	55                   	push   %ebp
 51c:	8d 8a 40 00 00 00    	lea    0x40(%edx),%ecx
 522:	8d 82 40 00 00 00    	lea    0x40(%edx),%eax
 528:	29 c8                	sub    %ecx,%eax
 52a:	89 e5                	mov    %esp,%ebp
 52c:	53                   	push   %ebx
 52d:	c1 f8 02             	sar    $0x2,%eax
 530:	89 c3                	mov    %eax,%ebx
 532:	83 ec 04             	sub    $0x4,%esp
 535:	c1 eb 1f             	shr    $0x1f,%ebx
 538:	01 d8                	add    %ebx,%eax
 53a:	d1 f8                	sar    %eax
 53c:	74 14                	je     552 <register_tm_clones+0x42>
 53e:	8b 92 30 00 00 00    	mov    0x30(%edx),%edx
 544:	85 d2                	test   %edx,%edx
 546:	74 0a                	je     552 <register_tm_clones+0x42>
 548:	83 ec 08             	sub    $0x8,%esp
 54b:	50                   	push   %eax
 54c:	51                   	push   %ecx
 54d:	ff d2                	call   *%edx
 54f:	83 c4 10             	add    $0x10,%esp
 552:	8b 5d fc             	mov    -0x4(%ebp),%ebx
 555:	c9                   	leave  
 556:	c3                   	ret    
 557:	89 f6                	mov    %esi,%esi
 559:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

00000560 <__do_global_dtors_aux>:
 560:	55                   	push   %ebp
 561:	89 e5                	mov    %esp,%ebp
 563:	53                   	push   %ebx
 564:	e8 57 ff ff ff       	call   4c0 <__x86.get_pc_thunk.bx>
 569:	81 c3 63 1a 00 00    	add    $0x1a63,%ebx
 56f:	83 ec 04             	sub    $0x4,%esp
 572:	80 bb 40 00 00 00 00 	cmpb   $0x0,0x40(%ebx)
 579:	75 27                	jne    5a2 <__do_global_dtors_aux+0x42>
 57b:	8b 83 24 00 00 00    	mov    0x24(%ebx),%eax
 581:	85 c0                	test   %eax,%eax
 583:	74 11                	je     596 <__do_global_dtors_aux+0x36>
 585:	83 ec 0c             	sub    $0xc,%esp
 588:	ff b3 38 00 00 00    	pushl  0x38(%ebx)
 58e:	e8 dd fe ff ff       	call   470 <__cxa_finalize@plt>
 593:	83 c4 10             	add    $0x10,%esp
 596:	e8 35 ff ff ff       	call   4d0 <deregister_tm_clones>
 59b:	c6 83 40 00 00 00 01 	movb   $0x1,0x40(%ebx)
 5a2:	8b 5d fc             	mov    -0x4(%ebp),%ebx
 5a5:	c9                   	leave  
 5a6:	c3                   	ret    
 5a7:	89 f6                	mov    %esi,%esi
 5a9:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

000005b0 <frame_dummy>:
 5b0:	55                   	push   %ebp
 5b1:	89 e5                	mov    %esp,%ebp
 5b3:	5d                   	pop    %ebp
 5b4:	e9 57 ff ff ff       	jmp    510 <register_tm_clones>

000005b9 <__x86.get_pc_thunk.dx>:
 5b9:	8b 14 24             	mov    (%esp),%edx
 5bc:	c3                   	ret    

000005bd <main>:
 5bd:	8d 4c 24 04          	lea    0x4(%esp),%ecx
 5c1:	83 e4 f0             	and    $0xfffffff0,%esp
 5c4:	ff 71 fc             	pushl  -0x4(%ecx)
 5c7:	55                   	push   %ebp
 5c8:	89 e5                	mov    %esp,%ebp
 5ca:	53                   	push   %ebx
 5cb:	51                   	push   %ecx
 5cc:	81 ec a0 00 00 00    	sub    $0xa0,%esp
 5d2:	e8 e9 fe ff ff       	call   4c0 <__x86.get_pc_thunk.bx>
 5d7:	81 c3 f5 19 00 00    	add    $0x19f5,%ebx
 5dd:	65 a1 14 00 00 00    	mov    %gs:0x14,%eax
 5e3:	89 45 f4             	mov    %eax,-0xc(%ebp)
 5e6:	31 c0                	xor    %eax,%eax
 5e8:	83 ec 0c             	sub    $0xc,%esp
 5eb:	8d 83 f1 e5 ff ff    	lea    -0x1a0f(%ebx),%eax
 5f1:	50                   	push   %eax
 5f2:	e8 99 01 00 00       	call   790 <get_permission>
 5f7:	83 c4 10             	add    $0x10,%esp
 5fa:	c7 85 68 ff ff ff 01 	movl   $0x1,-0x98(%ebp)
 601:	00 00 00 
 604:	8d 83 b1 e6 ff ff    	lea    -0x194f(%ebx),%eax
 60a:	89 85 6c ff ff ff    	mov    %eax,-0x94(%ebp)
 610:	8d 83 b3 e6 ff ff    	lea    -0x194d(%ebx),%eax
 616:	89 85 70 ff ff ff    	mov    %eax,-0x90(%ebp)
 61c:	8d 83 11 e7 ff ff    	lea    -0x18ef(%ebx),%eax
 622:	89 85 74 ff ff ff    	mov    %eax,-0x8c(%ebp)
 628:	c7 85 64 ff ff ff 00 	movl   $0x0,-0x9c(%ebp)
 62f:	00 00 00 
 632:	eb 2a                	jmp    65e <main+0xa1>
 634:	8b 95 64 ff ff ff    	mov    -0x9c(%ebp),%edx
 63a:	8b 85 6c ff ff ff    	mov    -0x94(%ebp),%eax
 640:	01 d0                	add    %edx,%eax
 642:	0f b6 00             	movzbl (%eax),%eax
 645:	89 c1                	mov    %eax,%ecx
 647:	8d 95 7b ff ff ff    	lea    -0x85(%ebp),%edx
 64d:	8b 85 64 ff ff ff    	mov    -0x9c(%ebp),%eax
 653:	01 d0                	add    %edx,%eax
 655:	88 08                	mov    %cl,(%eax)
 657:	83 85 64 ff ff ff 01 	addl   $0x1,-0x9c(%ebp)
 65e:	83 bd 64 ff ff ff 19 	cmpl   $0x19,-0x9c(%ebp)
 665:	7e cd                	jle    634 <main+0x77>
 667:	eb 18                	jmp    681 <main+0xc4>
 669:	8d 95 7b ff ff ff    	lea    -0x85(%ebp),%edx
 66f:	8b 85 64 ff ff ff    	mov    -0x9c(%ebp),%eax
 675:	01 d0                	add    %edx,%eax
 677:	c6 00 90             	movb   $0x90,(%eax)
 67a:	83 85 64 ff ff ff 01 	addl   $0x1,-0x9c(%ebp)
 681:	83 bd 64 ff ff ff 1e 	cmpl   $0x1e,-0x9c(%ebp)
 688:	7e df                	jle    669 <main+0xac>
 68a:	90                   	nop
 68b:	eb 5a                	jmp    6e7 <main+0x12a>
 68d:	d1 a5 68 ff ff ff    	shll   -0x98(%ebp)
 693:	d1 a5 68 ff ff ff    	shll   -0x98(%ebp)
 699:	d1 a5 68 ff ff ff    	shll   -0x98(%ebp)
 69f:	d1 a5 68 ff ff ff    	shll   -0x98(%ebp)
 6a5:	83 85 68 ff ff ff 01 	addl   $0x1,-0x98(%ebp)
 6ac:	c7 85 64 ff ff ff 00 	movl   $0x0,-0x9c(%ebp)
 6b3:	00 00 00 
 6b6:	eb 25                	jmp    6dd <main+0x120>
 6b8:	8d 55 b4             	lea    -0x4c(%ebp),%edx
 6bb:	8b 85 64 ff ff ff    	mov    -0x9c(%ebp),%eax
 6c1:	01 d0                	add    %edx,%eax
 6c3:	0f b6 10             	movzbl (%eax),%edx
 6c6:	8b 8d 64 ff ff ff    	mov    -0x9c(%ebp),%ecx
 6cc:	8b 85 74 ff ff ff    	mov    -0x8c(%ebp),%eax
 6d2:	01 c8                	add    %ecx,%eax
 6d4:	88 10                	mov    %dl,(%eax)
 6d6:	83 85 64 ff ff ff 01 	addl   $0x1,-0x9c(%ebp)
 6dd:	83 bd 64 ff ff ff 3f 	cmpl   $0x3f,-0x9c(%ebp)
 6e4:	7e d2                	jle    6b8 <main+0xfb>
 6e6:	90                   	nop
 6e7:	c7 85 64 ff ff ff 00 	movl   $0x0,-0x9c(%ebp)
 6ee:	00 00 00 
 6f1:	eb 27                	jmp    71a <main+0x15d>
 6f3:	8b 95 64 ff ff ff    	mov    -0x9c(%ebp),%edx
 6f9:	8b 85 6c ff ff ff    	mov    -0x94(%ebp),%eax
 6ff:	01 d0                	add    %edx,%eax
 701:	0f b6 00             	movzbl (%eax),%eax
 704:	89 c1                	mov    %eax,%ecx
 706:	8d 55 b4             	lea    -0x4c(%ebp),%edx
 709:	8b 85 64 ff ff ff    	mov    -0x9c(%ebp),%eax
 70f:	01 d0                	add    %edx,%eax
 711:	88 08                	mov    %cl,(%eax)
 713:	83 85 64 ff ff ff 01 	addl   $0x1,-0x9c(%ebp)
 71a:	83 bd 64 ff ff ff 1e 	cmpl   $0x1e,-0x9c(%ebp)
 721:	7e d0                	jle    6f3 <main+0x136>
 723:	c6 45 b5 fe          	movb   $0xfe,-0x4b(%ebp)
 727:	c7 85 64 ff ff ff 00 	movl   $0x0,-0x9c(%ebp)
 72e:	00 00 00 
 731:	eb 15                	jmp    748 <main+0x18b>
 733:	8d 55 95             	lea    -0x6b(%ebp),%edx
 736:	8b 85 64 ff ff ff    	mov    -0x9c(%ebp),%eax
 73c:	01 d0                	add    %edx,%eax
 73e:	c6 00 90             	movb   $0x90,(%eax)
 741:	83 85 64 ff ff ff 01 	addl   $0x1,-0x9c(%ebp)
 748:	83 bd 64 ff ff ff 1e 	cmpl   $0x1e,-0x9c(%ebp)
 74f:	7e e2                	jle    733 <main+0x176>
 751:	c7 85 64 ff ff ff 00 	movl   $0x0,-0x9c(%ebp)
 758:	00 00 00 
 75b:	eb 25                	jmp    782 <main+0x1c5>
 75d:	8d 55 95             	lea    -0x6b(%ebp),%edx
 760:	8b 85 64 ff ff ff    	mov    -0x9c(%ebp),%eax
 766:	01 d0                	add    %edx,%eax
 768:	0f b6 10             	movzbl (%eax),%edx
 76b:	8b 8d 64 ff ff ff    	mov    -0x9c(%ebp),%ecx
 771:	8b 85 70 ff ff ff    	mov    -0x90(%ebp),%eax
 777:	01 c8                	add    %ecx,%eax
 779:	88 10                	mov    %dl,(%eax)
 77b:	83 85 64 ff ff ff 01 	addl   $0x1,-0x9c(%ebp)
 782:	83 bd 64 ff ff ff 1e 	cmpl   $0x1e,-0x9c(%ebp)
 789:	7e d2                	jle    75d <main+0x1a0>
 78b:	e9 fd fe ff ff       	jmp    68d <main+0xd0>

00000790 <get_permission>:
 790:	55                   	push   %ebp
 791:	89 e5                	mov    %esp,%ebp
 793:	53                   	push   %ebx
 794:	83 ec 04             	sub    $0x4,%esp
 797:	e8 24 fd ff ff       	call   4c0 <__x86.get_pc_thunk.bx>
 79c:	81 c3 30 18 00 00    	add    $0x1830,%ebx
 7a2:	83 ec 0c             	sub    $0xc,%esp
 7a5:	ff 75 08             	pushl  0x8(%ebp)
 7a8:	e8 42 00 00 00       	call   7ef <change_page_permissions_of_address>
 7ad:	83 c4 10             	add    $0x10,%esp
 7b0:	83 f8 ff             	cmp    $0xffffffff,%eax
 7b3:	75 34                	jne    7e9 <get_permission+0x59>
 7b5:	8b 83 3c 00 00 00    	mov    0x3c(%ebx),%eax
 7bb:	83 ec 0c             	sub    $0xc,%esp
 7be:	50                   	push   %eax
 7bf:	e8 7c fc ff ff       	call   440 <strlen@plt>
 7c4:	83 c4 10             	add    $0x10,%esp
 7c7:	8d 50 01             	lea    0x1(%eax),%edx
 7ca:	8b 83 3c 00 00 00    	mov    0x3c(%ebx),%eax
 7d0:	83 ec 04             	sub    $0x4,%esp
 7d3:	52                   	push   %edx
 7d4:	50                   	push   %eax
 7d5:	6a 02                	push   $0x2
 7d7:	e8 84 fc ff ff       	call   460 <write@plt>
 7dc:	83 c4 10             	add    $0x10,%esp
 7df:	83 ec 0c             	sub    $0xc,%esp
 7e2:	6a 01                	push   $0x1
 7e4:	e8 47 fc ff ff       	call   430 <exit@plt>
 7e9:	90                   	nop
 7ea:	8b 5d fc             	mov    -0x4(%ebp),%ebx
 7ed:	c9                   	leave  
 7ee:	c3                   	ret    

000007ef <change_page_permissions_of_address>:
 7ef:	55                   	push   %ebp
 7f0:	89 e5                	mov    %esp,%ebp
 7f2:	53                   	push   %ebx
 7f3:	83 ec 14             	sub    $0x14,%esp
 7f6:	e8 4d 00 00 00       	call   848 <__x86.get_pc_thunk.cx>
 7fb:	81 c1 d1 17 00 00    	add    $0x17d1,%ecx
 801:	c7 45 f4 00 10 00 00 	movl   $0x1000,-0xc(%ebp)
 808:	8b 45 08             	mov    0x8(%ebp),%eax
 80b:	8b 5d f4             	mov    -0xc(%ebp),%ebx
 80e:	ba 00 00 00 00       	mov    $0x0,%edx
 813:	f7 f3                	div    %ebx
 815:	89 d0                	mov    %edx,%eax
 817:	f7 d8                	neg    %eax
 819:	01 45 08             	add    %eax,0x8(%ebp)
 81c:	8b 45 f4             	mov    -0xc(%ebp),%eax
 81f:	83 ec 04             	sub    $0x4,%esp
 822:	6a 07                	push   $0x7
 824:	50                   	push   %eax
 825:	ff 75 08             	pushl  0x8(%ebp)
 828:	89 cb                	mov    %ecx,%ebx
 82a:	e8 f1 fb ff ff       	call   420 <mprotect@plt>
 82f:	83 c4 10             	add    $0x10,%esp
 832:	83 f8 ff             	cmp    $0xffffffff,%eax
 835:	75 07                	jne    83e <change_page_permissions_of_address+0x4f>
 837:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
 83c:	eb 05                	jmp    843 <change_page_permissions_of_address+0x54>
 83e:	b8 00 00 00 00       	mov    $0x0,%eax
 843:	8b 5d fc             	mov    -0x4(%ebp),%ebx
 846:	c9                   	leave  
 847:	c3                   	ret    

00000848 <__x86.get_pc_thunk.cx>:
 848:	8b 0c 24             	mov    (%esp),%ecx
 84b:	c3                   	ret    
 84c:	66 90                	xchg   %ax,%ax
 84e:	66 90                	xchg   %ax,%ax

00000850 <__libc_csu_init>:
 850:	55                   	push   %ebp
 851:	57                   	push   %edi
 852:	56                   	push   %esi
 853:	53                   	push   %ebx
 854:	e8 67 fc ff ff       	call   4c0 <__x86.get_pc_thunk.bx>
 859:	81 c3 73 17 00 00    	add    $0x1773,%ebx
 85f:	83 ec 0c             	sub    $0xc,%esp
 862:	8b 6c 24 28          	mov    0x28(%esp),%ebp
 866:	8d b3 04 ff ff ff    	lea    -0xfc(%ebx),%esi
 86c:	e8 73 fb ff ff       	call   3e4 <_init>
 871:	8d 83 00 ff ff ff    	lea    -0x100(%ebx),%eax
 877:	29 c6                	sub    %eax,%esi
 879:	c1 fe 02             	sar    $0x2,%esi
 87c:	85 f6                	test   %esi,%esi
 87e:	74 25                	je     8a5 <__libc_csu_init+0x55>
 880:	31 ff                	xor    %edi,%edi
 882:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
 888:	83 ec 04             	sub    $0x4,%esp
 88b:	55                   	push   %ebp
 88c:	ff 74 24 2c          	pushl  0x2c(%esp)
 890:	ff 74 24 2c          	pushl  0x2c(%esp)
 894:	ff 94 bb 00 ff ff ff 	call   *-0x100(%ebx,%edi,4)
 89b:	83 c7 01             	add    $0x1,%edi
 89e:	83 c4 10             	add    $0x10,%esp
 8a1:	39 fe                	cmp    %edi,%esi
 8a3:	75 e3                	jne    888 <__libc_csu_init+0x38>
 8a5:	83 c4 0c             	add    $0xc,%esp
 8a8:	5b                   	pop    %ebx
 8a9:	5e                   	pop    %esi
 8aa:	5f                   	pop    %edi
 8ab:	5d                   	pop    %ebp
 8ac:	c3                   	ret    
 8ad:	8d 76 00             	lea    0x0(%esi),%esi

000008b0 <__libc_csu_fini>:
 8b0:	f3 c3                	repz ret 

Disassembly of section .fini:

000008b4 <_fini>:
 8b4:	53                   	push   %ebx
 8b5:	83 ec 08             	sub    $0x8,%esp
 8b8:	e8 03 fc ff ff       	call   4c0 <__x86.get_pc_thunk.bx>
 8bd:	81 c3 0f 17 00 00    	add    $0x170f,%ebx
 8c3:	83 c4 08             	add    $0x8,%esp
 8c6:	5b                   	pop    %ebx
 8c7:	c3                   	ret    
