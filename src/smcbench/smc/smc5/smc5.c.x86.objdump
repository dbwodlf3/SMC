
smc5.x86.out:     file format elf32-i386


Disassembly of section .init:

00000404 <_init>:
 404:	53                   	push   %ebx
 405:	83 ec 08             	sub    $0x8,%esp
 408:	e8 e3 00 00 00       	call   4f0 <__x86.get_pc_thunk.bx>
 40d:	81 c3 bb 1b 00 00    	add    $0x1bbb,%ebx
 413:	8b 83 2c 00 00 00    	mov    0x2c(%ebx),%eax
 419:	85 c0                	test   %eax,%eax
 41b:	74 05                	je     422 <_init+0x1e>
 41d:	e8 86 00 00 00       	call   4a8 <__gmon_start__@plt>
 422:	83 c4 08             	add    $0x8,%esp
 425:	5b                   	pop    %ebx
 426:	c3                   	ret    

Disassembly of section .plt:

00000430 <.plt>:
 430:	ff b3 04 00 00 00    	pushl  0x4(%ebx)
 436:	ff a3 08 00 00 00    	jmp    *0x8(%ebx)
 43c:	00 00                	add    %al,(%eax)
	...

00000440 <mprotect@plt>:
 440:	ff a3 0c 00 00 00    	jmp    *0xc(%ebx)
 446:	68 00 00 00 00       	push   $0x0
 44b:	e9 e0 ff ff ff       	jmp    430 <.plt>

00000450 <printf@plt>:
 450:	ff a3 10 00 00 00    	jmp    *0x10(%ebx)
 456:	68 08 00 00 00       	push   $0x8
 45b:	e9 d0 ff ff ff       	jmp    430 <.plt>

00000460 <exit@plt>:
 460:	ff a3 14 00 00 00    	jmp    *0x14(%ebx)
 466:	68 10 00 00 00       	push   $0x10
 46b:	e9 c0 ff ff ff       	jmp    430 <.plt>

00000470 <strlen@plt>:
 470:	ff a3 18 00 00 00    	jmp    *0x18(%ebx)
 476:	68 18 00 00 00       	push   $0x18
 47b:	e9 b0 ff ff ff       	jmp    430 <.plt>

00000480 <__libc_start_main@plt>:
 480:	ff a3 1c 00 00 00    	jmp    *0x1c(%ebx)
 486:	68 20 00 00 00       	push   $0x20
 48b:	e9 a0 ff ff ff       	jmp    430 <.plt>

00000490 <write@plt>:
 490:	ff a3 20 00 00 00    	jmp    *0x20(%ebx)
 496:	68 28 00 00 00       	push   $0x28
 49b:	e9 90 ff ff ff       	jmp    430 <.plt>

Disassembly of section .plt.got:

000004a0 <__cxa_finalize@plt>:
 4a0:	ff a3 28 00 00 00    	jmp    *0x28(%ebx)
 4a6:	66 90                	xchg   %ax,%ax

000004a8 <__gmon_start__@plt>:
 4a8:	ff a3 2c 00 00 00    	jmp    *0x2c(%ebx)
 4ae:	66 90                	xchg   %ax,%ax

Disassembly of section .text:

000004b0 <_start>:
 4b0:	31 ed                	xor    %ebp,%ebp
 4b2:	5e                   	pop    %esi
 4b3:	89 e1                	mov    %esp,%ecx
 4b5:	83 e4 f0             	and    $0xfffffff0,%esp
 4b8:	50                   	push   %eax
 4b9:	54                   	push   %esp
 4ba:	52                   	push   %edx
 4bb:	e8 22 00 00 00       	call   4e2 <_start+0x32>
 4c0:	81 c3 08 1b 00 00    	add    $0x1b08,%ebx
 4c6:	8d 83 98 e9 ff ff    	lea    -0x1668(%ebx),%eax
 4cc:	50                   	push   %eax
 4cd:	8d 83 38 e9 ff ff    	lea    -0x16c8(%ebx),%eax
 4d3:	50                   	push   %eax
 4d4:	51                   	push   %ecx
 4d5:	56                   	push   %esi
 4d6:	ff b3 30 00 00 00    	pushl  0x30(%ebx)
 4dc:	e8 9f ff ff ff       	call   480 <__libc_start_main@plt>
 4e1:	f4                   	hlt    
 4e2:	8b 1c 24             	mov    (%esp),%ebx
 4e5:	c3                   	ret    
 4e6:	66 90                	xchg   %ax,%ax
 4e8:	66 90                	xchg   %ax,%ax
 4ea:	66 90                	xchg   %ax,%ax
 4ec:	66 90                	xchg   %ax,%ax
 4ee:	66 90                	xchg   %ax,%ax

000004f0 <__x86.get_pc_thunk.bx>:
 4f0:	8b 1c 24             	mov    (%esp),%ebx
 4f3:	c3                   	ret    
 4f4:	66 90                	xchg   %ax,%ax
 4f6:	66 90                	xchg   %ax,%ax
 4f8:	66 90                	xchg   %ax,%ax
 4fa:	66 90                	xchg   %ax,%ax
 4fc:	66 90                	xchg   %ax,%ax
 4fe:	66 90                	xchg   %ax,%ax

00000500 <deregister_tm_clones>:
 500:	e8 e4 00 00 00       	call   5e9 <__x86.get_pc_thunk.dx>
 505:	81 c2 c3 1a 00 00    	add    $0x1ac3,%edx
 50b:	8d 8a 44 00 00 00    	lea    0x44(%edx),%ecx
 511:	8d 82 44 00 00 00    	lea    0x44(%edx),%eax
 517:	39 c8                	cmp    %ecx,%eax
 519:	74 1d                	je     538 <deregister_tm_clones+0x38>
 51b:	8b 82 24 00 00 00    	mov    0x24(%edx),%eax
 521:	85 c0                	test   %eax,%eax
 523:	74 13                	je     538 <deregister_tm_clones+0x38>
 525:	55                   	push   %ebp
 526:	89 e5                	mov    %esp,%ebp
 528:	83 ec 14             	sub    $0x14,%esp
 52b:	51                   	push   %ecx
 52c:	ff d0                	call   *%eax
 52e:	83 c4 10             	add    $0x10,%esp
 531:	c9                   	leave  
 532:	c3                   	ret    
 533:	90                   	nop
 534:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
 538:	f3 c3                	repz ret 
 53a:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi

00000540 <register_tm_clones>:
 540:	e8 a4 00 00 00       	call   5e9 <__x86.get_pc_thunk.dx>
 545:	81 c2 83 1a 00 00    	add    $0x1a83,%edx
 54b:	55                   	push   %ebp
 54c:	8d 8a 44 00 00 00    	lea    0x44(%edx),%ecx
 552:	8d 82 44 00 00 00    	lea    0x44(%edx),%eax
 558:	29 c8                	sub    %ecx,%eax
 55a:	89 e5                	mov    %esp,%ebp
 55c:	53                   	push   %ebx
 55d:	c1 f8 02             	sar    $0x2,%eax
 560:	89 c3                	mov    %eax,%ebx
 562:	83 ec 04             	sub    $0x4,%esp
 565:	c1 eb 1f             	shr    $0x1f,%ebx
 568:	01 d8                	add    %ebx,%eax
 56a:	d1 f8                	sar    %eax
 56c:	74 14                	je     582 <register_tm_clones+0x42>
 56e:	8b 92 34 00 00 00    	mov    0x34(%edx),%edx
 574:	85 d2                	test   %edx,%edx
 576:	74 0a                	je     582 <register_tm_clones+0x42>
 578:	83 ec 08             	sub    $0x8,%esp
 57b:	50                   	push   %eax
 57c:	51                   	push   %ecx
 57d:	ff d2                	call   *%edx
 57f:	83 c4 10             	add    $0x10,%esp
 582:	8b 5d fc             	mov    -0x4(%ebp),%ebx
 585:	c9                   	leave  
 586:	c3                   	ret    
 587:	89 f6                	mov    %esi,%esi
 589:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

00000590 <__do_global_dtors_aux>:
 590:	55                   	push   %ebp
 591:	89 e5                	mov    %esp,%ebp
 593:	53                   	push   %ebx
 594:	e8 57 ff ff ff       	call   4f0 <__x86.get_pc_thunk.bx>
 599:	81 c3 2f 1a 00 00    	add    $0x1a2f,%ebx
 59f:	83 ec 04             	sub    $0x4,%esp
 5a2:	80 bb 44 00 00 00 00 	cmpb   $0x0,0x44(%ebx)
 5a9:	75 27                	jne    5d2 <__do_global_dtors_aux+0x42>
 5ab:	8b 83 28 00 00 00    	mov    0x28(%ebx),%eax
 5b1:	85 c0                	test   %eax,%eax
 5b3:	74 11                	je     5c6 <__do_global_dtors_aux+0x36>
 5b5:	83 ec 0c             	sub    $0xc,%esp
 5b8:	ff b3 3c 00 00 00    	pushl  0x3c(%ebx)
 5be:	e8 dd fe ff ff       	call   4a0 <__cxa_finalize@plt>
 5c3:	83 c4 10             	add    $0x10,%esp
 5c6:	e8 35 ff ff ff       	call   500 <deregister_tm_clones>
 5cb:	c6 83 44 00 00 00 01 	movb   $0x1,0x44(%ebx)
 5d2:	8b 5d fc             	mov    -0x4(%ebp),%ebx
 5d5:	c9                   	leave  
 5d6:	c3                   	ret    
 5d7:	89 f6                	mov    %esi,%esi
 5d9:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

000005e0 <frame_dummy>:
 5e0:	55                   	push   %ebp
 5e1:	89 e5                	mov    %esp,%ebp
 5e3:	5d                   	pop    %ebp
 5e4:	e9 57 ff ff ff       	jmp    540 <register_tm_clones>

000005e9 <__x86.get_pc_thunk.dx>:
 5e9:	8b 14 24             	mov    (%esp),%edx
 5ec:	c3                   	ret    

000005ed <main>:
 5ed:	8d 4c 24 04          	lea    0x4(%esp),%ecx
 5f1:	83 e4 f0             	and    $0xfffffff0,%esp
 5f4:	ff 71 fc             	pushl  -0x4(%ecx)
 5f7:	55                   	push   %ebp
 5f8:	89 e5                	mov    %esp,%ebp
 5fa:	53                   	push   %ebx
 5fb:	51                   	push   %ecx
 5fc:	81 ec b0 00 00 00    	sub    $0xb0,%esp
 602:	e8 e9 fe ff ff       	call   4f0 <__x86.get_pc_thunk.bx>
 607:	81 c3 c1 19 00 00    	add    $0x19c1,%ebx
 60d:	65 a1 14 00 00 00    	mov    %gs:0x14,%eax
 613:	89 45 f4             	mov    %eax,-0xc(%ebp)
 616:	31 c0                	xor    %eax,%eax
 618:	c7 85 4c ff ff ff 01 	movl   $0x1,-0xb4(%ebp)
 61f:	00 00 00 
 622:	83 ec 0c             	sub    $0xc,%esp
 625:	8d 83 25 e6 ff ff    	lea    -0x19db(%ebx),%eax
 62b:	50                   	push   %eax
 62c:	e8 0c 02 00 00       	call   83d <get_permission>
 631:	83 c4 10             	add    $0x10,%esp
 634:	8d 93 b3 e7 ff ff    	lea    -0x184d(%ebx),%edx
 63a:	8d 83 4c 00 00 00    	lea    0x4c(%ebx),%eax
 640:	89 10                	mov    %edx,(%eax)
 642:	8d 93 7c e7 ff ff    	lea    -0x1884(%ebx),%edx
 648:	8d 83 48 00 00 00    	lea    0x48(%ebx),%eax
 64e:	89 10                	mov    %edx,(%eax)
 650:	c7 85 48 ff ff ff 00 	movl   $0x0,-0xb8(%ebp)
 657:	00 00 00 
 65a:	eb 2c                	jmp    688 <main+0x9b>
 65c:	8d 83 48 00 00 00    	lea    0x48(%ebx),%eax
 662:	8b 10                	mov    (%eax),%edx
 664:	8b 85 48 ff ff ff    	mov    -0xb8(%ebp),%eax
 66a:	01 d0                	add    %edx,%eax
 66c:	0f b6 00             	movzbl (%eax),%eax
 66f:	89 c1                	mov    %eax,%ecx
 671:	8d 95 52 ff ff ff    	lea    -0xae(%ebp),%edx
 677:	8b 85 48 ff ff ff    	mov    -0xb8(%ebp),%eax
 67d:	01 d0                	add    %edx,%eax
 67f:	88 08                	mov    %cl,(%eax)
 681:	83 85 48 ff ff ff 01 	addl   $0x1,-0xb8(%ebp)
 688:	83 bd 48 ff ff ff 35 	cmpl   $0x35,-0xb8(%ebp)
 68f:	7e cb                	jle    65c <main+0x6f>
 691:	c7 85 48 ff ff ff 00 	movl   $0x0,-0xb8(%ebp)
 698:	00 00 00 
 69b:	eb 25                	jmp    6c2 <main+0xd5>
 69d:	8d 95 52 ff ff ff    	lea    -0xae(%ebp),%edx
 6a3:	8b 85 48 ff ff ff    	mov    -0xb8(%ebp),%eax
 6a9:	01 d0                	add    %edx,%eax
 6ab:	0f b6 00             	movzbl (%eax),%eax
 6ae:	8d 4d 88             	lea    -0x78(%ebp),%ecx
 6b1:	8b 95 48 ff ff ff    	mov    -0xb8(%ebp),%edx
 6b7:	01 ca                	add    %ecx,%edx
 6b9:	88 02                	mov    %al,(%edx)
 6bb:	83 85 48 ff ff ff 01 	addl   $0x1,-0xb8(%ebp)
 6c2:	83 bd 48 ff ff ff 35 	cmpl   $0x35,-0xb8(%ebp)
 6c9:	7e d2                	jle    69d <main+0xb0>
 6cb:	0f b6 45 9d          	movzbl -0x63(%ebp),%eax
 6cf:	83 c0 08             	add    $0x8,%eax
 6d2:	88 45 9d             	mov    %al,-0x63(%ebp)
 6d5:	c7 85 48 ff ff ff 00 	movl   $0x0,-0xb8(%ebp)
 6dc:	00 00 00 
 6df:	eb 27                	jmp    708 <main+0x11b>
 6e1:	8d 55 88             	lea    -0x78(%ebp),%edx
 6e4:	8b 85 48 ff ff ff    	mov    -0xb8(%ebp),%eax
 6ea:	01 d0                	add    %edx,%eax
 6ec:	0f b6 10             	movzbl (%eax),%edx
 6ef:	8d 83 48 00 00 00    	lea    0x48(%ebx),%eax
 6f5:	8b 08                	mov    (%eax),%ecx
 6f7:	8b 85 48 ff ff ff    	mov    -0xb8(%ebp),%eax
 6fd:	01 c8                	add    %ecx,%eax
 6ff:	88 10                	mov    %dl,(%eax)
 701:	83 85 48 ff ff ff 01 	addl   $0x1,-0xb8(%ebp)
 708:	83 bd 48 ff ff ff 35 	cmpl   $0x35,-0xb8(%ebp)
 70f:	7e d0                	jle    6e1 <main+0xf4>
 711:	c7 85 48 ff ff ff 00 	movl   $0x0,-0xb8(%ebp)
 718:	00 00 00 
 71b:	eb 29                	jmp    746 <main+0x159>
 71d:	8d 83 4c 00 00 00    	lea    0x4c(%ebx),%eax
 723:	8b 10                	mov    (%eax),%edx
 725:	8b 85 48 ff ff ff    	mov    -0xb8(%ebp),%eax
 72b:	01 d0                	add    %edx,%eax
 72d:	0f b6 00             	movzbl (%eax),%eax
 730:	89 c1                	mov    %eax,%ecx
 732:	8d 55 be             	lea    -0x42(%ebp),%edx
 735:	8b 85 48 ff ff ff    	mov    -0xb8(%ebp),%eax
 73b:	01 d0                	add    %edx,%eax
 73d:	88 08                	mov    %cl,(%eax)
 73f:	83 85 48 ff ff ff 01 	addl   $0x1,-0xb8(%ebp)
 746:	83 bd 48 ff ff ff 35 	cmpl   $0x35,-0xb8(%ebp)
 74d:	7e ce                	jle    71d <main+0x130>
 74f:	90                   	nop
 750:	c7 85 48 ff ff ff 00 	movl   $0x0,-0xb8(%ebp)
 757:	00 00 00 
 75a:	eb 2a                	jmp    786 <main+0x199>
 75c:	8d 95 52 ff ff ff    	lea    -0xae(%ebp),%edx
 762:	8b 85 48 ff ff ff    	mov    -0xb8(%ebp),%eax
 768:	01 d0                	add    %edx,%eax
 76a:	0f b6 10             	movzbl (%eax),%edx
 76d:	8d 83 48 00 00 00    	lea    0x48(%ebx),%eax
 773:	8b 08                	mov    (%eax),%ecx
 775:	8b 85 48 ff ff ff    	mov    -0xb8(%ebp),%eax
 77b:	01 c8                	add    %ecx,%eax
 77d:	88 10                	mov    %dl,(%eax)
 77f:	83 85 48 ff ff ff 01 	addl   $0x1,-0xb8(%ebp)
 786:	83 bd 48 ff ff ff 35 	cmpl   $0x35,-0xb8(%ebp)
 78d:	7e cd                	jle    75c <main+0x16f>
 78f:	90                   	nop
 790:	d1 a5 4c ff ff ff    	shll   -0xb4(%ebp)
 796:	d1 a5 4c ff ff ff    	shll   -0xb4(%ebp)
 79c:	d1 a5 4c ff ff ff    	shll   -0xb4(%ebp)
 7a2:	d1 a5 4c ff ff ff    	shll   -0xb4(%ebp)
 7a8:	d1 a5 4c ff ff ff    	shll   -0xb4(%ebp)
 7ae:	d1 a5 4c ff ff ff    	shll   -0xb4(%ebp)
 7b4:	d1 a5 4c ff ff ff    	shll   -0xb4(%ebp)
 7ba:	d1 a5 4c ff ff ff    	shll   -0xb4(%ebp)
 7c0:	d1 a5 4c ff ff ff    	shll   -0xb4(%ebp)
 7c6:	c7 85 48 ff ff ff 00 	movl   $0x0,-0xb8(%ebp)
 7cd:	00 00 00 
 7d0:	eb 27                	jmp    7f9 <main+0x20c>
 7d2:	8d 55 be             	lea    -0x42(%ebp),%edx
 7d5:	8b 85 48 ff ff ff    	mov    -0xb8(%ebp),%eax
 7db:	01 d0                	add    %edx,%eax
 7dd:	0f b6 10             	movzbl (%eax),%edx
 7e0:	8d 83 4c 00 00 00    	lea    0x4c(%ebx),%eax
 7e6:	8b 08                	mov    (%eax),%ecx
 7e8:	8b 85 48 ff ff ff    	mov    -0xb8(%ebp),%eax
 7ee:	01 c8                	add    %ecx,%eax
 7f0:	88 10                	mov    %dl,(%eax)
 7f2:	83 85 48 ff ff ff 01 	addl   $0x1,-0xb8(%ebp)
 7f9:	83 bd 48 ff ff ff 35 	cmpl   $0x35,-0xb8(%ebp)
 800:	7e d0                	jle    7d2 <main+0x1e5>
 802:	83 ec 08             	sub    $0x8,%esp
 805:	ff b5 4c ff ff ff    	pushl  -0xb4(%ebp)
 80b:	8d 83 e8 e9 ff ff    	lea    -0x1618(%ebx),%eax
 811:	50                   	push   %eax
 812:	e8 39 fc ff ff       	call   450 <printf@plt>
 817:	83 c4 10             	add    $0x10,%esp
 81a:	8d 83 48 00 00 00    	lea    0x48(%ebx),%eax
 820:	8b 00                	mov    (%eax),%eax
 822:	83 c0 15             	add    $0x15,%eax
 825:	0f b6 10             	movzbl (%eax),%edx
 828:	8d 83 48 00 00 00    	lea    0x48(%ebx),%eax
 82e:	8b 00                	mov    (%eax),%eax
 830:	83 c0 15             	add    $0x15,%eax
 833:	83 ea 08             	sub    $0x8,%edx
 836:	88 10                	mov    %dl,(%eax)
 838:	e9 f7 fd ff ff       	jmp    634 <main+0x47>

0000083d <get_permission>:
 83d:	55                   	push   %ebp
 83e:	89 e5                	mov    %esp,%ebp
 840:	53                   	push   %ebx
 841:	83 ec 04             	sub    $0x4,%esp
 844:	e8 a7 fc ff ff       	call   4f0 <__x86.get_pc_thunk.bx>
 849:	81 c3 7f 17 00 00    	add    $0x177f,%ebx
 84f:	83 ec 0c             	sub    $0xc,%esp
 852:	ff 75 08             	pushl  0x8(%ebp)
 855:	e8 42 00 00 00       	call   89c <change_page_permissions_of_address>
 85a:	83 c4 10             	add    $0x10,%esp
 85d:	83 f8 ff             	cmp    $0xffffffff,%eax
 860:	75 34                	jne    896 <get_permission+0x59>
 862:	8b 83 40 00 00 00    	mov    0x40(%ebx),%eax
 868:	83 ec 0c             	sub    $0xc,%esp
 86b:	50                   	push   %eax
 86c:	e8 ff fb ff ff       	call   470 <strlen@plt>
 871:	83 c4 10             	add    $0x10,%esp
 874:	8d 50 01             	lea    0x1(%eax),%edx
 877:	8b 83 40 00 00 00    	mov    0x40(%ebx),%eax
 87d:	83 ec 04             	sub    $0x4,%esp
 880:	52                   	push   %edx
 881:	50                   	push   %eax
 882:	6a 02                	push   $0x2
 884:	e8 07 fc ff ff       	call   490 <write@plt>
 889:	83 c4 10             	add    $0x10,%esp
 88c:	83 ec 0c             	sub    $0xc,%esp
 88f:	6a 01                	push   $0x1
 891:	e8 ca fb ff ff       	call   460 <exit@plt>
 896:	90                   	nop
 897:	8b 5d fc             	mov    -0x4(%ebp),%ebx
 89a:	c9                   	leave  
 89b:	c3                   	ret    

0000089c <change_page_permissions_of_address>:
 89c:	55                   	push   %ebp
 89d:	89 e5                	mov    %esp,%ebp
 89f:	53                   	push   %ebx
 8a0:	83 ec 14             	sub    $0x14,%esp
 8a3:	e8 4d 00 00 00       	call   8f5 <__x86.get_pc_thunk.cx>
 8a8:	81 c1 20 17 00 00    	add    $0x1720,%ecx
 8ae:	c7 45 f4 00 10 00 00 	movl   $0x1000,-0xc(%ebp)
 8b5:	8b 45 08             	mov    0x8(%ebp),%eax
 8b8:	8b 5d f4             	mov    -0xc(%ebp),%ebx
 8bb:	ba 00 00 00 00       	mov    $0x0,%edx
 8c0:	f7 f3                	div    %ebx
 8c2:	89 d0                	mov    %edx,%eax
 8c4:	f7 d8                	neg    %eax
 8c6:	01 45 08             	add    %eax,0x8(%ebp)
 8c9:	8b 45 f4             	mov    -0xc(%ebp),%eax
 8cc:	83 ec 04             	sub    $0x4,%esp
 8cf:	6a 07                	push   $0x7
 8d1:	50                   	push   %eax
 8d2:	ff 75 08             	pushl  0x8(%ebp)
 8d5:	89 cb                	mov    %ecx,%ebx
 8d7:	e8 64 fb ff ff       	call   440 <mprotect@plt>
 8dc:	83 c4 10             	add    $0x10,%esp
 8df:	83 f8 ff             	cmp    $0xffffffff,%eax
 8e2:	75 07                	jne    8eb <change_page_permissions_of_address+0x4f>
 8e4:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
 8e9:	eb 05                	jmp    8f0 <change_page_permissions_of_address+0x54>
 8eb:	b8 00 00 00 00       	mov    $0x0,%eax
 8f0:	8b 5d fc             	mov    -0x4(%ebp),%ebx
 8f3:	c9                   	leave  
 8f4:	c3                   	ret    

000008f5 <__x86.get_pc_thunk.cx>:
 8f5:	8b 0c 24             	mov    (%esp),%ecx
 8f8:	c3                   	ret    
 8f9:	66 90                	xchg   %ax,%ax
 8fb:	66 90                	xchg   %ax,%ax
 8fd:	66 90                	xchg   %ax,%ax
 8ff:	90                   	nop

00000900 <__libc_csu_init>:
 900:	55                   	push   %ebp
 901:	57                   	push   %edi
 902:	56                   	push   %esi
 903:	53                   	push   %ebx
 904:	e8 e7 fb ff ff       	call   4f0 <__x86.get_pc_thunk.bx>
 909:	81 c3 bf 16 00 00    	add    $0x16bf,%ebx
 90f:	83 ec 0c             	sub    $0xc,%esp
 912:	8b 6c 24 28          	mov    0x28(%esp),%ebp
 916:	8d b3 04 ff ff ff    	lea    -0xfc(%ebx),%esi
 91c:	e8 e3 fa ff ff       	call   404 <_init>
 921:	8d 83 00 ff ff ff    	lea    -0x100(%ebx),%eax
 927:	29 c6                	sub    %eax,%esi
 929:	c1 fe 02             	sar    $0x2,%esi
 92c:	85 f6                	test   %esi,%esi
 92e:	74 25                	je     955 <__libc_csu_init+0x55>
 930:	31 ff                	xor    %edi,%edi
 932:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
 938:	83 ec 04             	sub    $0x4,%esp
 93b:	55                   	push   %ebp
 93c:	ff 74 24 2c          	pushl  0x2c(%esp)
 940:	ff 74 24 2c          	pushl  0x2c(%esp)
 944:	ff 94 bb 00 ff ff ff 	call   *-0x100(%ebx,%edi,4)
 94b:	83 c7 01             	add    $0x1,%edi
 94e:	83 c4 10             	add    $0x10,%esp
 951:	39 fe                	cmp    %edi,%esi
 953:	75 e3                	jne    938 <__libc_csu_init+0x38>
 955:	83 c4 0c             	add    $0xc,%esp
 958:	5b                   	pop    %ebx
 959:	5e                   	pop    %esi
 95a:	5f                   	pop    %edi
 95b:	5d                   	pop    %ebp
 95c:	c3                   	ret    
 95d:	8d 76 00             	lea    0x0(%esi),%esi

00000960 <__libc_csu_fini>:
 960:	f3 c3                	repz ret 

Disassembly of section .fini:

00000964 <_fini>:
 964:	53                   	push   %ebx
 965:	83 ec 08             	sub    $0x8,%esp
 968:	e8 83 fb ff ff       	call   4f0 <__x86.get_pc_thunk.bx>
 96d:	81 c3 5b 16 00 00    	add    $0x165b,%ebx
 973:	83 c4 08             	add    $0x8,%esp
 976:	5b                   	pop    %ebx
 977:	c3                   	ret    
