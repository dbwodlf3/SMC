
smc2.x86.out:     file format elf32-i386


Disassembly of section .init:

0000044c <_init>:
 44c:	53                   	push   %ebx
 44d:	83 ec 08             	sub    $0x8,%esp
 450:	e8 eb 00 00 00       	call   540 <__x86.get_pc_thunk.bx>
 455:	81 c3 6f 1b 00 00    	add    $0x1b6f,%ebx
 45b:	8b 83 30 00 00 00    	mov    0x30(%ebx),%eax
 461:	85 c0                	test   %eax,%eax
 463:	74 05                	je     46a <_init+0x1e>
 465:	e8 8e 00 00 00       	call   4f8 <__gmon_start__@plt>
 46a:	83 c4 08             	add    $0x8,%esp
 46d:	5b                   	pop    %ebx
 46e:	c3                   	ret    

Disassembly of section .plt:

00000470 <.plt>:
 470:	ff b3 04 00 00 00    	pushl  0x4(%ebx)
 476:	ff a3 08 00 00 00    	jmp    *0x8(%ebx)
 47c:	00 00                	add    %al,(%eax)
	...

00000480 <mprotect@plt>:
 480:	ff a3 0c 00 00 00    	jmp    *0xc(%ebx)
 486:	68 00 00 00 00       	push   $0x0
 48b:	e9 e0 ff ff ff       	jmp    470 <.plt>

00000490 <printf@plt>:
 490:	ff a3 10 00 00 00    	jmp    *0x10(%ebx)
 496:	68 08 00 00 00       	push   $0x8
 49b:	e9 d0 ff ff ff       	jmp    470 <.plt>

000004a0 <__stack_chk_fail@plt>:
 4a0:	ff a3 14 00 00 00    	jmp    *0x14(%ebx)
 4a6:	68 10 00 00 00       	push   $0x10
 4ab:	e9 c0 ff ff ff       	jmp    470 <.plt>

000004b0 <exit@plt>:
 4b0:	ff a3 18 00 00 00    	jmp    *0x18(%ebx)
 4b6:	68 18 00 00 00       	push   $0x18
 4bb:	e9 b0 ff ff ff       	jmp    470 <.plt>

000004c0 <strlen@plt>:
 4c0:	ff a3 1c 00 00 00    	jmp    *0x1c(%ebx)
 4c6:	68 20 00 00 00       	push   $0x20
 4cb:	e9 a0 ff ff ff       	jmp    470 <.plt>

000004d0 <__libc_start_main@plt>:
 4d0:	ff a3 20 00 00 00    	jmp    *0x20(%ebx)
 4d6:	68 28 00 00 00       	push   $0x28
 4db:	e9 90 ff ff ff       	jmp    470 <.plt>

000004e0 <write@plt>:
 4e0:	ff a3 24 00 00 00    	jmp    *0x24(%ebx)
 4e6:	68 30 00 00 00       	push   $0x30
 4eb:	e9 80 ff ff ff       	jmp    470 <.plt>

Disassembly of section .plt.got:

000004f0 <__cxa_finalize@plt>:
 4f0:	ff a3 2c 00 00 00    	jmp    *0x2c(%ebx)
 4f6:	66 90                	xchg   %ax,%ax

000004f8 <__gmon_start__@plt>:
 4f8:	ff a3 30 00 00 00    	jmp    *0x30(%ebx)
 4fe:	66 90                	xchg   %ax,%ax

Disassembly of section .text:

00000500 <_start>:
 500:	31 ed                	xor    %ebp,%ebp
 502:	5e                   	pop    %esi
 503:	89 e1                	mov    %esp,%ecx
 505:	83 e4 f0             	and    $0xfffffff0,%esp
 508:	50                   	push   %eax
 509:	54                   	push   %esp
 50a:	52                   	push   %edx
 50b:	e8 22 00 00 00       	call   532 <_start+0x32>
 510:	81 c3 b4 1a 00 00    	add    $0x1ab4,%ebx
 516:	8d 83 bc e9 ff ff    	lea    -0x1644(%ebx),%eax
 51c:	50                   	push   %eax
 51d:	8d 83 5c e9 ff ff    	lea    -0x16a4(%ebx),%eax
 523:	50                   	push   %eax
 524:	51                   	push   %ecx
 525:	56                   	push   %esi
 526:	ff b3 34 00 00 00    	pushl  0x34(%ebx)
 52c:	e8 9f ff ff ff       	call   4d0 <__libc_start_main@plt>
 531:	f4                   	hlt    
 532:	8b 1c 24             	mov    (%esp),%ebx
 535:	c3                   	ret    
 536:	66 90                	xchg   %ax,%ax
 538:	66 90                	xchg   %ax,%ax
 53a:	66 90                	xchg   %ax,%ax
 53c:	66 90                	xchg   %ax,%ax
 53e:	66 90                	xchg   %ax,%ax

00000540 <__x86.get_pc_thunk.bx>:
 540:	8b 1c 24             	mov    (%esp),%ebx
 543:	c3                   	ret    
 544:	66 90                	xchg   %ax,%ax
 546:	66 90                	xchg   %ax,%ax
 548:	66 90                	xchg   %ax,%ax
 54a:	66 90                	xchg   %ax,%ax
 54c:	66 90                	xchg   %ax,%ax
 54e:	66 90                	xchg   %ax,%ax

00000550 <deregister_tm_clones>:
 550:	e8 e4 00 00 00       	call   639 <__x86.get_pc_thunk.dx>
 555:	81 c2 6f 1a 00 00    	add    $0x1a6f,%edx
 55b:	8d 8a 48 00 00 00    	lea    0x48(%edx),%ecx
 561:	8d 82 48 00 00 00    	lea    0x48(%edx),%eax
 567:	39 c8                	cmp    %ecx,%eax
 569:	74 1d                	je     588 <deregister_tm_clones+0x38>
 56b:	8b 82 28 00 00 00    	mov    0x28(%edx),%eax
 571:	85 c0                	test   %eax,%eax
 573:	74 13                	je     588 <deregister_tm_clones+0x38>
 575:	55                   	push   %ebp
 576:	89 e5                	mov    %esp,%ebp
 578:	83 ec 14             	sub    $0x14,%esp
 57b:	51                   	push   %ecx
 57c:	ff d0                	call   *%eax
 57e:	83 c4 10             	add    $0x10,%esp
 581:	c9                   	leave  
 582:	c3                   	ret    
 583:	90                   	nop
 584:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
 588:	f3 c3                	repz ret 
 58a:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi

00000590 <register_tm_clones>:
 590:	e8 a4 00 00 00       	call   639 <__x86.get_pc_thunk.dx>
 595:	81 c2 2f 1a 00 00    	add    $0x1a2f,%edx
 59b:	55                   	push   %ebp
 59c:	8d 8a 48 00 00 00    	lea    0x48(%edx),%ecx
 5a2:	8d 82 48 00 00 00    	lea    0x48(%edx),%eax
 5a8:	29 c8                	sub    %ecx,%eax
 5aa:	89 e5                	mov    %esp,%ebp
 5ac:	53                   	push   %ebx
 5ad:	c1 f8 02             	sar    $0x2,%eax
 5b0:	89 c3                	mov    %eax,%ebx
 5b2:	83 ec 04             	sub    $0x4,%esp
 5b5:	c1 eb 1f             	shr    $0x1f,%ebx
 5b8:	01 d8                	add    %ebx,%eax
 5ba:	d1 f8                	sar    %eax
 5bc:	74 14                	je     5d2 <register_tm_clones+0x42>
 5be:	8b 92 38 00 00 00    	mov    0x38(%edx),%edx
 5c4:	85 d2                	test   %edx,%edx
 5c6:	74 0a                	je     5d2 <register_tm_clones+0x42>
 5c8:	83 ec 08             	sub    $0x8,%esp
 5cb:	50                   	push   %eax
 5cc:	51                   	push   %ecx
 5cd:	ff d2                	call   *%edx
 5cf:	83 c4 10             	add    $0x10,%esp
 5d2:	8b 5d fc             	mov    -0x4(%ebp),%ebx
 5d5:	c9                   	leave  
 5d6:	c3                   	ret    
 5d7:	89 f6                	mov    %esi,%esi
 5d9:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

000005e0 <__do_global_dtors_aux>:
 5e0:	55                   	push   %ebp
 5e1:	89 e5                	mov    %esp,%ebp
 5e3:	53                   	push   %ebx
 5e4:	e8 57 ff ff ff       	call   540 <__x86.get_pc_thunk.bx>
 5e9:	81 c3 db 19 00 00    	add    $0x19db,%ebx
 5ef:	83 ec 04             	sub    $0x4,%esp
 5f2:	80 bb 48 00 00 00 00 	cmpb   $0x0,0x48(%ebx)
 5f9:	75 27                	jne    622 <__do_global_dtors_aux+0x42>
 5fb:	8b 83 2c 00 00 00    	mov    0x2c(%ebx),%eax
 601:	85 c0                	test   %eax,%eax
 603:	74 11                	je     616 <__do_global_dtors_aux+0x36>
 605:	83 ec 0c             	sub    $0xc,%esp
 608:	ff b3 40 00 00 00    	pushl  0x40(%ebx)
 60e:	e8 dd fe ff ff       	call   4f0 <__cxa_finalize@plt>
 613:	83 c4 10             	add    $0x10,%esp
 616:	e8 35 ff ff ff       	call   550 <deregister_tm_clones>
 61b:	c6 83 48 00 00 00 01 	movb   $0x1,0x48(%ebx)
 622:	8b 5d fc             	mov    -0x4(%ebp),%ebx
 625:	c9                   	leave  
 626:	c3                   	ret    
 627:	89 f6                	mov    %esi,%esi
 629:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

00000630 <frame_dummy>:
 630:	55                   	push   %ebp
 631:	89 e5                	mov    %esp,%ebp
 633:	5d                   	pop    %ebp
 634:	e9 57 ff ff ff       	jmp    590 <register_tm_clones>

00000639 <__x86.get_pc_thunk.dx>:
 639:	8b 14 24             	mov    (%esp),%edx
 63c:	c3                   	ret    

0000063d <f>:
 63d:	55                   	push   %ebp
 63e:	89 e5                	mov    %esp,%ebp
 640:	53                   	push   %ebx
 641:	83 ec 44             	sub    $0x44,%esp
 644:	e8 f7 fe ff ff       	call   540 <__x86.get_pc_thunk.bx>
 649:	81 c3 7b 19 00 00    	add    $0x197b,%ebx
 64f:	8b 45 08             	mov    0x8(%ebp),%eax
 652:	89 45 c4             	mov    %eax,-0x3c(%ebp)
 655:	65 a1 14 00 00 00    	mov    %gs:0x14,%eax
 65b:	89 45 f4             	mov    %eax,-0xc(%ebp)
 65e:	31 c0                	xor    %eax,%eax
 660:	8b 45 c4             	mov    -0x3c(%ebp),%eax
 663:	c7 00 2a 00 00 00    	movl   $0x2a,(%eax)
 669:	8d 45 c4             	lea    -0x3c(%ebp),%eax
 66c:	83 c0 4f             	add    $0x4f,%eax
 66f:	89 45 e0             	mov    %eax,-0x20(%ebp)
 672:	c7 45 dc 00 00 00 00 	movl   $0x0,-0x24(%ebp)
 679:	c7 45 d8 08 00 00 00 	movl   $0x8,-0x28(%ebp)
 680:	eb 65                	jmp    6e7 <f+0xaa>
 682:	8b 55 d8             	mov    -0x28(%ebp),%edx
 685:	8b 45 e0             	mov    -0x20(%ebp),%eax
 688:	01 d0                	add    %edx,%eax
 68a:	0f b6 00             	movzbl (%eax),%eax
 68d:	88 45 d7             	mov    %al,-0x29(%ebp)
 690:	0f be 45 d7          	movsbl -0x29(%ebp),%eax
 694:	83 e0 0f             	and    $0xf,%eax
 697:	89 c2                	mov    %eax,%edx
 699:	0f be 45 d7          	movsbl -0x29(%ebp),%eax
 69d:	c1 e8 04             	shr    $0x4,%eax
 6a0:	83 e0 0f             	and    $0xf,%eax
 6a3:	83 ec 04             	sub    $0x4,%esp
 6a6:	52                   	push   %edx
 6a7:	50                   	push   %eax
 6a8:	8d 83 2c ea ff ff    	lea    -0x15d4(%ebx),%eax
 6ae:	50                   	push   %eax
 6af:	e8 dc fd ff ff       	call   490 <printf@plt>
 6b4:	83 c4 10             	add    $0x10,%esp
 6b7:	0f be 45 d7          	movsbl -0x29(%ebp),%eax
 6bb:	c1 e8 04             	shr    $0x4,%eax
 6be:	83 e0 0f             	and    $0xf,%eax
 6c1:	89 c2                	mov    %eax,%edx
 6c3:	8b 45 dc             	mov    -0x24(%ebp),%eax
 6c6:	09 d0                	or     %edx,%eax
 6c8:	89 45 dc             	mov    %eax,-0x24(%ebp)
 6cb:	c1 65 dc 04          	shll   $0x4,-0x24(%ebp)
 6cf:	0f be 45 d7          	movsbl -0x29(%ebp),%eax
 6d3:	83 e0 0f             	and    $0xf,%eax
 6d6:	09 45 dc             	or     %eax,-0x24(%ebp)
 6d9:	83 7d d8 01          	cmpl   $0x1,-0x28(%ebp)
 6dd:	7e 04                	jle    6e3 <f+0xa6>
 6df:	c1 65 dc 04          	shll   $0x4,-0x24(%ebp)
 6e3:	83 6d d8 01          	subl   $0x1,-0x28(%ebp)
 6e7:	83 7d d8 00          	cmpl   $0x0,-0x28(%ebp)
 6eb:	7f 95                	jg     682 <f+0x45>
 6ed:	8b 45 dc             	mov    -0x24(%ebp),%eax
 6f0:	89 45 e4             	mov    %eax,-0x1c(%ebp)
 6f3:	8b 45 e4             	mov    -0x1c(%ebp),%eax
 6f6:	83 e8 05             	sub    $0x5,%eax
 6f9:	89 45 e8             	mov    %eax,-0x18(%ebp)
 6fc:	8d 83 4a e8 ff ff    	lea    -0x17b6(%ebx),%eax
 702:	83 ec 08             	sub    $0x8,%esp
 705:	50                   	push   %eax
 706:	8d 83 32 ea ff ff    	lea    -0x15ce(%ebx),%eax
 70c:	50                   	push   %eax
 70d:	e8 7e fd ff ff       	call   490 <printf@plt>
 712:	83 c4 10             	add    $0x10,%esp
 715:	83 ec 08             	sub    $0x8,%esp
 718:	ff 75 e4             	pushl  -0x1c(%ebp)
 71b:	8d 83 3d ea ff ff    	lea    -0x15c3(%ebx),%eax
 721:	50                   	push   %eax
 722:	e8 69 fd ff ff       	call   490 <printf@plt>
 727:	83 c4 10             	add    $0x10,%esp
 72a:	c7 45 d8 00 00 00 00 	movl   $0x0,-0x28(%ebp)
 731:	eb 19                	jmp    74c <f+0x10f>
 733:	8b 55 d8             	mov    -0x28(%ebp),%edx
 736:	8b 45 e8             	mov    -0x18(%ebp),%eax
 739:	01 d0                	add    %edx,%eax
 73b:	0f b6 00             	movzbl (%eax),%eax
 73e:	8d 4d ef             	lea    -0x11(%ebp),%ecx
 741:	8b 55 d8             	mov    -0x28(%ebp),%edx
 744:	01 ca                	add    %ecx,%edx
 746:	88 02                	mov    %al,(%edx)
 748:	83 45 d8 01          	addl   $0x1,-0x28(%ebp)
 74c:	83 7d d8 04          	cmpl   $0x4,-0x28(%ebp)
 750:	7e e1                	jle    733 <f+0xf6>
 752:	c7 45 d8 00 00 00 00 	movl   $0x0,-0x28(%ebp)
 759:	eb 34                	jmp    78f <f+0x152>
 75b:	8d 55 ef             	lea    -0x11(%ebp),%edx
 75e:	8b 45 d8             	mov    -0x28(%ebp),%eax
 761:	01 d0                	add    %edx,%eax
 763:	0f b6 10             	movzbl (%eax),%edx
 766:	8d 83 4c 00 00 00    	lea    0x4c(%ebx),%eax
 76c:	8b 08                	mov    (%eax),%ecx
 76e:	8b 45 d8             	mov    -0x28(%ebp),%eax
 771:	01 c8                	add    %ecx,%eax
 773:	0f b6 00             	movzbl (%eax),%eax
 776:	38 c2                	cmp    %al,%dl
 778:	74 11                	je     78b <f+0x14e>
 77a:	8b 45 c4             	mov    -0x3c(%ebp),%eax
 77d:	8b 00                	mov    (%eax),%eax
 77f:	83 ec 0c             	sub    $0xc,%esp
 782:	50                   	push   %eax
 783:	e8 24 00 00 00       	call   7ac <halt>
 788:	83 c4 10             	add    $0x10,%esp
 78b:	83 45 d8 01          	addl   $0x1,-0x28(%ebp)
 78f:	83 7d d8 04          	cmpl   $0x4,-0x28(%ebp)
 793:	7e c6                	jle    75b <f+0x11e>
 795:	90                   	nop
 796:	8b 45 f4             	mov    -0xc(%ebp),%eax
 799:	65 33 05 14 00 00 00 	xor    %gs:0x14,%eax
 7a0:	74 05                	je     7a7 <f+0x16a>
 7a2:	e8 e9 01 00 00       	call   990 <__stack_chk_fail_local>
 7a7:	8b 5d fc             	mov    -0x4(%ebp),%ebx
 7aa:	c9                   	leave  
 7ab:	c3                   	ret    

000007ac <halt>:
 7ac:	55                   	push   %ebp
 7ad:	89 e5                	mov    %esp,%ebp
 7af:	53                   	push   %ebx
 7b0:	83 ec 04             	sub    $0x4,%esp
 7b3:	e8 88 fd ff ff       	call   540 <__x86.get_pc_thunk.bx>
 7b8:	81 c3 0c 18 00 00    	add    $0x180c,%ebx
 7be:	83 ec 08             	sub    $0x8,%esp
 7c1:	ff 75 08             	pushl  0x8(%ebp)
 7c4:	8d 83 4b ea ff ff    	lea    -0x15b5(%ebx),%eax
 7ca:	50                   	push   %eax
 7cb:	e8 c0 fc ff ff       	call   490 <printf@plt>
 7d0:	83 c4 10             	add    $0x10,%esp
 7d3:	83 ec 0c             	sub    $0xc,%esp
 7d6:	6a 00                	push   $0x0
 7d8:	e8 d3 fc ff ff       	call   4b0 <exit@plt>

000007dd <main>:
 7dd:	8d 4c 24 04          	lea    0x4(%esp),%ecx
 7e1:	83 e4 f0             	and    $0xfffffff0,%esp
 7e4:	ff 71 fc             	pushl  -0x4(%ecx)
 7e7:	55                   	push   %ebp
 7e8:	89 e5                	mov    %esp,%ebp
 7ea:	51                   	push   %ecx
 7eb:	83 ec 14             	sub    $0x14,%esp
 7ee:	e8 1a 01 00 00       	call   90d <__x86.get_pc_thunk.ax>
 7f3:	05 d1 17 00 00       	add    $0x17d1,%eax
 7f8:	65 8b 0d 14 00 00 00 	mov    %gs:0x14,%ecx
 7ff:	89 4d f4             	mov    %ecx,-0xc(%ebp)
 802:	31 c9                	xor    %ecx,%ecx
 804:	8d 90 45 e8 ff ff    	lea    -0x17bb(%eax),%edx
 80a:	8d 80 4c 00 00 00    	lea    0x4c(%eax),%eax
 810:	89 10                	mov    %edx,(%eax)
 812:	83 ec 0c             	sub    $0xc,%esp
 815:	8d 45 f0             	lea    -0x10(%ebp),%eax
 818:	50                   	push   %eax
 819:	e8 1f fe ff ff       	call   63d <f>
 81e:	83 c4 10             	add    $0x10,%esp
 821:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)
 828:	8b 45 f0             	mov    -0x10(%ebp),%eax
 82b:	83 ec 0c             	sub    $0xc,%esp
 82e:	50                   	push   %eax
 82f:	e8 78 ff ff ff       	call   7ac <halt>
 834:	83 c4 10             	add    $0x10,%esp
 837:	b8 00 00 00 00       	mov    $0x0,%eax
 83c:	8b 4d f4             	mov    -0xc(%ebp),%ecx
 83f:	65 33 0d 14 00 00 00 	xor    %gs:0x14,%ecx
 846:	74 05                	je     84d <main+0x70>
 848:	e8 43 01 00 00       	call   990 <__stack_chk_fail_local>
 84d:	8b 4d fc             	mov    -0x4(%ebp),%ecx
 850:	c9                   	leave  
 851:	8d 61 fc             	lea    -0x4(%ecx),%esp
 854:	c3                   	ret    

00000855 <get_permission>:
 855:	55                   	push   %ebp
 856:	89 e5                	mov    %esp,%ebp
 858:	53                   	push   %ebx
 859:	83 ec 04             	sub    $0x4,%esp
 85c:	e8 df fc ff ff       	call   540 <__x86.get_pc_thunk.bx>
 861:	81 c3 63 17 00 00    	add    $0x1763,%ebx
 867:	83 ec 0c             	sub    $0xc,%esp
 86a:	ff 75 08             	pushl  0x8(%ebp)
 86d:	e8 42 00 00 00       	call   8b4 <change_page_permissions_of_address>
 872:	83 c4 10             	add    $0x10,%esp
 875:	83 f8 ff             	cmp    $0xffffffff,%eax
 878:	75 34                	jne    8ae <get_permission+0x59>
 87a:	8b 83 44 00 00 00    	mov    0x44(%ebx),%eax
 880:	83 ec 0c             	sub    $0xc,%esp
 883:	50                   	push   %eax
 884:	e8 37 fc ff ff       	call   4c0 <strlen@plt>
 889:	83 c4 10             	add    $0x10,%esp
 88c:	8d 50 01             	lea    0x1(%eax),%edx
 88f:	8b 83 44 00 00 00    	mov    0x44(%ebx),%eax
 895:	83 ec 04             	sub    $0x4,%esp
 898:	52                   	push   %edx
 899:	50                   	push   %eax
 89a:	6a 02                	push   $0x2
 89c:	e8 3f fc ff ff       	call   4e0 <write@plt>
 8a1:	83 c4 10             	add    $0x10,%esp
 8a4:	83 ec 0c             	sub    $0xc,%esp
 8a7:	6a 01                	push   $0x1
 8a9:	e8 02 fc ff ff       	call   4b0 <exit@plt>
 8ae:	90                   	nop
 8af:	8b 5d fc             	mov    -0x4(%ebp),%ebx
 8b2:	c9                   	leave  
 8b3:	c3                   	ret    

000008b4 <change_page_permissions_of_address>:
 8b4:	55                   	push   %ebp
 8b5:	89 e5                	mov    %esp,%ebp
 8b7:	53                   	push   %ebx
 8b8:	83 ec 14             	sub    $0x14,%esp
 8bb:	e8 51 00 00 00       	call   911 <__x86.get_pc_thunk.cx>
 8c0:	81 c1 04 17 00 00    	add    $0x1704,%ecx
 8c6:	c7 45 f4 00 10 00 00 	movl   $0x1000,-0xc(%ebp)
 8cd:	8b 45 08             	mov    0x8(%ebp),%eax
 8d0:	8b 5d f4             	mov    -0xc(%ebp),%ebx
 8d3:	ba 00 00 00 00       	mov    $0x0,%edx
 8d8:	f7 f3                	div    %ebx
 8da:	89 d0                	mov    %edx,%eax
 8dc:	f7 d8                	neg    %eax
 8de:	01 45 08             	add    %eax,0x8(%ebp)
 8e1:	8b 45 f4             	mov    -0xc(%ebp),%eax
 8e4:	83 ec 04             	sub    $0x4,%esp
 8e7:	6a 07                	push   $0x7
 8e9:	50                   	push   %eax
 8ea:	ff 75 08             	pushl  0x8(%ebp)
 8ed:	89 cb                	mov    %ecx,%ebx
 8ef:	e8 8c fb ff ff       	call   480 <mprotect@plt>
 8f4:	83 c4 10             	add    $0x10,%esp
 8f7:	83 f8 ff             	cmp    $0xffffffff,%eax
 8fa:	75 07                	jne    903 <change_page_permissions_of_address+0x4f>
 8fc:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
 901:	eb 05                	jmp    908 <change_page_permissions_of_address+0x54>
 903:	b8 00 00 00 00       	mov    $0x0,%eax
 908:	8b 5d fc             	mov    -0x4(%ebp),%ebx
 90b:	c9                   	leave  
 90c:	c3                   	ret    

0000090d <__x86.get_pc_thunk.ax>:
 90d:	8b 04 24             	mov    (%esp),%eax
 910:	c3                   	ret    

00000911 <__x86.get_pc_thunk.cx>:
 911:	8b 0c 24             	mov    (%esp),%ecx
 914:	c3                   	ret    
 915:	66 90                	xchg   %ax,%ax
 917:	66 90                	xchg   %ax,%ax
 919:	66 90                	xchg   %ax,%ax
 91b:	66 90                	xchg   %ax,%ax
 91d:	66 90                	xchg   %ax,%ax
 91f:	90                   	nop

00000920 <__libc_csu_init>:
 920:	55                   	push   %ebp
 921:	57                   	push   %edi
 922:	56                   	push   %esi
 923:	53                   	push   %ebx
 924:	e8 17 fc ff ff       	call   540 <__x86.get_pc_thunk.bx>
 929:	81 c3 9b 16 00 00    	add    $0x169b,%ebx
 92f:	83 ec 0c             	sub    $0xc,%esp
 932:	8b 6c 24 28          	mov    0x28(%esp),%ebp
 936:	8d b3 04 ff ff ff    	lea    -0xfc(%ebx),%esi
 93c:	e8 0b fb ff ff       	call   44c <_init>
 941:	8d 83 00 ff ff ff    	lea    -0x100(%ebx),%eax
 947:	29 c6                	sub    %eax,%esi
 949:	c1 fe 02             	sar    $0x2,%esi
 94c:	85 f6                	test   %esi,%esi
 94e:	74 25                	je     975 <__libc_csu_init+0x55>
 950:	31 ff                	xor    %edi,%edi
 952:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
 958:	83 ec 04             	sub    $0x4,%esp
 95b:	55                   	push   %ebp
 95c:	ff 74 24 2c          	pushl  0x2c(%esp)
 960:	ff 74 24 2c          	pushl  0x2c(%esp)
 964:	ff 94 bb 00 ff ff ff 	call   *-0x100(%ebx,%edi,4)
 96b:	83 c7 01             	add    $0x1,%edi
 96e:	83 c4 10             	add    $0x10,%esp
 971:	39 fe                	cmp    %edi,%esi
 973:	75 e3                	jne    958 <__libc_csu_init+0x38>
 975:	83 c4 0c             	add    $0xc,%esp
 978:	5b                   	pop    %ebx
 979:	5e                   	pop    %esi
 97a:	5f                   	pop    %edi
 97b:	5d                   	pop    %ebp
 97c:	c3                   	ret    
 97d:	8d 76 00             	lea    0x0(%esi),%esi

00000980 <__libc_csu_fini>:
 980:	f3 c3                	repz ret 
 982:	66 90                	xchg   %ax,%ax
 984:	66 90                	xchg   %ax,%ax
 986:	66 90                	xchg   %ax,%ax
 988:	66 90                	xchg   %ax,%ax
 98a:	66 90                	xchg   %ax,%ax
 98c:	66 90                	xchg   %ax,%ax
 98e:	66 90                	xchg   %ax,%ax

00000990 <__stack_chk_fail_local>:
 990:	53                   	push   %ebx
 991:	e8 aa fb ff ff       	call   540 <__x86.get_pc_thunk.bx>
 996:	81 c3 2e 16 00 00    	add    $0x162e,%ebx
 99c:	83 ec 08             	sub    $0x8,%esp
 99f:	e8 fc fa ff ff       	call   4a0 <__stack_chk_fail@plt>

Disassembly of section .fini:

000009a4 <_fini>:
 9a4:	53                   	push   %ebx
 9a5:	83 ec 08             	sub    $0x8,%esp
 9a8:	e8 93 fb ff ff       	call   540 <__x86.get_pc_thunk.bx>
 9ad:	81 c3 17 16 00 00    	add    $0x1617,%ebx
 9b3:	83 c4 08             	add    $0x8,%esp
 9b6:	5b                   	pop    %ebx
 9b7:	c3                   	ret    
