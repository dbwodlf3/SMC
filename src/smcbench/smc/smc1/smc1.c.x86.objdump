
smc1.x86.out:     file format elf32-i386


Disassembly of section .init:

0000044c <_init>:
 44c:	53                   	push   %ebx
 44d:	83 ec 08             	sub    $0x8,%esp
 450:	e8 eb 00 00 00       	call   540 <__x86.get_pc_thunk.bx>
 455:	81 c3 6f 1b 00 00    	add    $0x1b6f,%ebx
 45b:	8b 83 30 00 00 00    	mov    0x30(%ebx),%eax
 461:	85 c0                	test   %eax,%eax
 463:	74 05                	je     46a <_init+0x1e>
 465:	e8 8e 00 00 00       	call   4f8 <__gmon_start__@plt>
 46a:	83 c4 08             	add    $0x8,%esp
 46d:	5b                   	pop    %ebx
 46e:	c3                   	ret    

Disassembly of section .plt:

00000470 <.plt>:
 470:	ff b3 04 00 00 00    	pushl  0x4(%ebx)
 476:	ff a3 08 00 00 00    	jmp    *0x8(%ebx)
 47c:	00 00                	add    %al,(%eax)
	...

00000480 <mprotect@plt>:
 480:	ff a3 0c 00 00 00    	jmp    *0xc(%ebx)
 486:	68 00 00 00 00       	push   $0x0
 48b:	e9 e0 ff ff ff       	jmp    470 <.plt>

00000490 <printf@plt>:
 490:	ff a3 10 00 00 00    	jmp    *0x10(%ebx)
 496:	68 08 00 00 00       	push   $0x8
 49b:	e9 d0 ff ff ff       	jmp    470 <.plt>

000004a0 <__stack_chk_fail@plt>:
 4a0:	ff a3 14 00 00 00    	jmp    *0x14(%ebx)
 4a6:	68 10 00 00 00       	push   $0x10
 4ab:	e9 c0 ff ff ff       	jmp    470 <.plt>

000004b0 <exit@plt>:
 4b0:	ff a3 18 00 00 00    	jmp    *0x18(%ebx)
 4b6:	68 18 00 00 00       	push   $0x18
 4bb:	e9 b0 ff ff ff       	jmp    470 <.plt>

000004c0 <strlen@plt>:
 4c0:	ff a3 1c 00 00 00    	jmp    *0x1c(%ebx)
 4c6:	68 20 00 00 00       	push   $0x20
 4cb:	e9 a0 ff ff ff       	jmp    470 <.plt>

000004d0 <__libc_start_main@plt>:
 4d0:	ff a3 20 00 00 00    	jmp    *0x20(%ebx)
 4d6:	68 28 00 00 00       	push   $0x28
 4db:	e9 90 ff ff ff       	jmp    470 <.plt>

000004e0 <write@plt>:
 4e0:	ff a3 24 00 00 00    	jmp    *0x24(%ebx)
 4e6:	68 30 00 00 00       	push   $0x30
 4eb:	e9 80 ff ff ff       	jmp    470 <.plt>

Disassembly of section .plt.got:

000004f0 <__cxa_finalize@plt>:
 4f0:	ff a3 2c 00 00 00    	jmp    *0x2c(%ebx)
 4f6:	66 90                	xchg   %ax,%ax

000004f8 <__gmon_start__@plt>:
 4f8:	ff a3 30 00 00 00    	jmp    *0x30(%ebx)
 4fe:	66 90                	xchg   %ax,%ax

Disassembly of section .text:

00000500 <_start>:
 500:	31 ed                	xor    %ebp,%ebp
 502:	5e                   	pop    %esi
 503:	89 e1                	mov    %esp,%ecx
 505:	83 e4 f0             	and    $0xfffffff0,%esp
 508:	50                   	push   %eax
 509:	54                   	push   %esp
 50a:	52                   	push   %edx
 50b:	e8 22 00 00 00       	call   532 <_start+0x32>
 510:	81 c3 b4 1a 00 00    	add    $0x1ab4,%ebx
 516:	8d 83 6c e8 ff ff    	lea    -0x1794(%ebx),%eax
 51c:	50                   	push   %eax
 51d:	8d 83 0c e8 ff ff    	lea    -0x17f4(%ebx),%eax
 523:	50                   	push   %eax
 524:	51                   	push   %ecx
 525:	56                   	push   %esi
 526:	ff b3 34 00 00 00    	pushl  0x34(%ebx)
 52c:	e8 9f ff ff ff       	call   4d0 <__libc_start_main@plt>
 531:	f4                   	hlt    
 532:	8b 1c 24             	mov    (%esp),%ebx
 535:	c3                   	ret    
 536:	66 90                	xchg   %ax,%ax
 538:	66 90                	xchg   %ax,%ax
 53a:	66 90                	xchg   %ax,%ax
 53c:	66 90                	xchg   %ax,%ax
 53e:	66 90                	xchg   %ax,%ax

00000540 <__x86.get_pc_thunk.bx>:
 540:	8b 1c 24             	mov    (%esp),%ebx
 543:	c3                   	ret    
 544:	66 90                	xchg   %ax,%ax
 546:	66 90                	xchg   %ax,%ax
 548:	66 90                	xchg   %ax,%ax
 54a:	66 90                	xchg   %ax,%ax
 54c:	66 90                	xchg   %ax,%ax
 54e:	66 90                	xchg   %ax,%ax

00000550 <deregister_tm_clones>:
 550:	e8 e4 00 00 00       	call   639 <__x86.get_pc_thunk.dx>
 555:	81 c2 6f 1a 00 00    	add    $0x1a6f,%edx
 55b:	8d 8a 48 00 00 00    	lea    0x48(%edx),%ecx
 561:	8d 82 48 00 00 00    	lea    0x48(%edx),%eax
 567:	39 c8                	cmp    %ecx,%eax
 569:	74 1d                	je     588 <deregister_tm_clones+0x38>
 56b:	8b 82 28 00 00 00    	mov    0x28(%edx),%eax
 571:	85 c0                	test   %eax,%eax
 573:	74 13                	je     588 <deregister_tm_clones+0x38>
 575:	55                   	push   %ebp
 576:	89 e5                	mov    %esp,%ebp
 578:	83 ec 14             	sub    $0x14,%esp
 57b:	51                   	push   %ecx
 57c:	ff d0                	call   *%eax
 57e:	83 c4 10             	add    $0x10,%esp
 581:	c9                   	leave  
 582:	c3                   	ret    
 583:	90                   	nop
 584:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
 588:	f3 c3                	repz ret 
 58a:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi

00000590 <register_tm_clones>:
 590:	e8 a4 00 00 00       	call   639 <__x86.get_pc_thunk.dx>
 595:	81 c2 2f 1a 00 00    	add    $0x1a2f,%edx
 59b:	55                   	push   %ebp
 59c:	8d 8a 48 00 00 00    	lea    0x48(%edx),%ecx
 5a2:	8d 82 48 00 00 00    	lea    0x48(%edx),%eax
 5a8:	29 c8                	sub    %ecx,%eax
 5aa:	89 e5                	mov    %esp,%ebp
 5ac:	53                   	push   %ebx
 5ad:	c1 f8 02             	sar    $0x2,%eax
 5b0:	89 c3                	mov    %eax,%ebx
 5b2:	83 ec 04             	sub    $0x4,%esp
 5b5:	c1 eb 1f             	shr    $0x1f,%ebx
 5b8:	01 d8                	add    %ebx,%eax
 5ba:	d1 f8                	sar    %eax
 5bc:	74 14                	je     5d2 <register_tm_clones+0x42>
 5be:	8b 92 38 00 00 00    	mov    0x38(%edx),%edx
 5c4:	85 d2                	test   %edx,%edx
 5c6:	74 0a                	je     5d2 <register_tm_clones+0x42>
 5c8:	83 ec 08             	sub    $0x8,%esp
 5cb:	50                   	push   %eax
 5cc:	51                   	push   %ecx
 5cd:	ff d2                	call   *%edx
 5cf:	83 c4 10             	add    $0x10,%esp
 5d2:	8b 5d fc             	mov    -0x4(%ebp),%ebx
 5d5:	c9                   	leave  
 5d6:	c3                   	ret    
 5d7:	89 f6                	mov    %esi,%esi
 5d9:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

000005e0 <__do_global_dtors_aux>:
 5e0:	55                   	push   %ebp
 5e1:	89 e5                	mov    %esp,%ebp
 5e3:	53                   	push   %ebx
 5e4:	e8 57 ff ff ff       	call   540 <__x86.get_pc_thunk.bx>
 5e9:	81 c3 db 19 00 00    	add    $0x19db,%ebx
 5ef:	83 ec 04             	sub    $0x4,%esp
 5f2:	80 bb 48 00 00 00 00 	cmpb   $0x0,0x48(%ebx)
 5f9:	75 27                	jne    622 <__do_global_dtors_aux+0x42>
 5fb:	8b 83 2c 00 00 00    	mov    0x2c(%ebx),%eax
 601:	85 c0                	test   %eax,%eax
 603:	74 11                	je     616 <__do_global_dtors_aux+0x36>
 605:	83 ec 0c             	sub    $0xc,%esp
 608:	ff b3 40 00 00 00    	pushl  0x40(%ebx)
 60e:	e8 dd fe ff ff       	call   4f0 <__cxa_finalize@plt>
 613:	83 c4 10             	add    $0x10,%esp
 616:	e8 35 ff ff ff       	call   550 <deregister_tm_clones>
 61b:	c6 83 48 00 00 00 01 	movb   $0x1,0x48(%ebx)
 622:	8b 5d fc             	mov    -0x4(%ebp),%ebx
 625:	c9                   	leave  
 626:	c3                   	ret    
 627:	89 f6                	mov    %esi,%esi
 629:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

00000630 <frame_dummy>:
 630:	55                   	push   %ebp
 631:	89 e5                	mov    %esp,%ebp
 633:	5d                   	pop    %ebp
 634:	e9 57 ff ff ff       	jmp    590 <register_tm_clones>

00000639 <__x86.get_pc_thunk.dx>:
 639:	8b 14 24             	mov    (%esp),%edx
 63c:	c3                   	ret    

0000063d <main>:
 63d:	8d 4c 24 04          	lea    0x4(%esp),%ecx
 641:	83 e4 f0             	and    $0xfffffff0,%esp
 644:	ff 71 fc             	pushl  -0x4(%ecx)
 647:	55                   	push   %ebp
 648:	89 e5                	mov    %esp,%ebp
 64a:	53                   	push   %ebx
 64b:	51                   	push   %ecx
 64c:	83 ec 20             	sub    $0x20,%esp
 64f:	e8 ec fe ff ff       	call   540 <__x86.get_pc_thunk.bx>
 654:	81 c3 70 19 00 00    	add    $0x1970,%ebx
 65a:	65 a1 14 00 00 00    	mov    %gs:0x14,%eax
 660:	89 45 f4             	mov    %eax,-0xc(%ebp)
 663:	31 c0                	xor    %eax,%eax
 665:	8d 83 e4 e6 ff ff    	lea    -0x191c(%ebx),%eax
 66b:	89 45 e4             	mov    %eax,-0x1c(%ebp)
 66e:	83 ec 0c             	sub    $0xc,%esp
 671:	8d 83 79 e6 ff ff    	lea    -0x1987(%ebx),%eax
 677:	50                   	push   %eax
 678:	e8 88 00 00 00       	call   705 <get_permission>
 67d:	83 c4 10             	add    $0x10,%esp
 680:	c7 45 e8 08 00 00 00 	movl   $0x8,-0x18(%ebp)
 687:	8b 45 e4             	mov    -0x1c(%ebp),%eax
 68a:	8b 00                	mov    (%eax),%eax
 68c:	89 45 ec             	mov    %eax,-0x14(%ebp)
 68f:	c7 45 e0 01 00 00 00 	movl   $0x1,-0x20(%ebp)
 696:	c6 45 df 01          	movb   $0x1,-0x21(%ebp)
 69a:	8b 45 e0             	mov    -0x20(%ebp),%eax
 69d:	3b 45 e8             	cmp    -0x18(%ebp),%eax
 6a0:	74 28                	je     6ca <main+0x8d>
 6a2:	83 45 e0 01          	addl   $0x1,-0x20(%ebp)
 6a6:	8b 45 ec             	mov    -0x14(%ebp),%eax
 6a9:	89 45 f0             	mov    %eax,-0x10(%ebp)
 6ac:	0f b6 55 f3          	movzbl -0xd(%ebp),%edx
 6b0:	0f b6 45 df          	movzbl -0x21(%ebp),%eax
 6b4:	01 d0                	add    %edx,%eax
 6b6:	83 e8 01             	sub    $0x1,%eax
 6b9:	88 45 f3             	mov    %al,-0xd(%ebp)
 6bc:	80 45 df 01          	addb   $0x1,-0x21(%ebp)
 6c0:	8b 55 f0             	mov    -0x10(%ebp),%edx
 6c3:	8b 45 e4             	mov    -0x1c(%ebp),%eax
 6c6:	89 10                	mov    %edx,(%eax)
 6c8:	eb d0                	jmp    69a <main+0x5d>
 6ca:	90                   	nop
 6cb:	0f b6 45 df          	movzbl -0x21(%ebp),%eax
 6cf:	83 ec 04             	sub    $0x4,%esp
 6d2:	50                   	push   %eax
 6d3:	ff 75 e8             	pushl  -0x18(%ebp)
 6d6:	8d 83 dc e8 ff ff    	lea    -0x1724(%ebx),%eax
 6dc:	50                   	push   %eax
 6dd:	e8 ae fd ff ff       	call   490 <printf@plt>
 6e2:	83 c4 10             	add    $0x10,%esp
 6e5:	b8 00 00 00 00       	mov    $0x0,%eax
 6ea:	8b 4d f4             	mov    -0xc(%ebp),%ecx
 6ed:	65 33 0d 14 00 00 00 	xor    %gs:0x14,%ecx
 6f4:	74 05                	je     6fb <main+0xbe>
 6f6:	e8 45 01 00 00       	call   840 <__stack_chk_fail_local>
 6fb:	8d 65 f8             	lea    -0x8(%ebp),%esp
 6fe:	59                   	pop    %ecx
 6ff:	5b                   	pop    %ebx
 700:	5d                   	pop    %ebp
 701:	8d 61 fc             	lea    -0x4(%ecx),%esp
 704:	c3                   	ret    

00000705 <get_permission>:
 705:	55                   	push   %ebp
 706:	89 e5                	mov    %esp,%ebp
 708:	53                   	push   %ebx
 709:	83 ec 04             	sub    $0x4,%esp
 70c:	e8 2f fe ff ff       	call   540 <__x86.get_pc_thunk.bx>
 711:	81 c3 b3 18 00 00    	add    $0x18b3,%ebx
 717:	83 ec 0c             	sub    $0xc,%esp
 71a:	ff 75 08             	pushl  0x8(%ebp)
 71d:	e8 42 00 00 00       	call   764 <change_page_permissions_of_address>
 722:	83 c4 10             	add    $0x10,%esp
 725:	83 f8 ff             	cmp    $0xffffffff,%eax
 728:	75 34                	jne    75e <get_permission+0x59>
 72a:	8b 83 44 00 00 00    	mov    0x44(%ebx),%eax
 730:	83 ec 0c             	sub    $0xc,%esp
 733:	50                   	push   %eax
 734:	e8 87 fd ff ff       	call   4c0 <strlen@plt>
 739:	83 c4 10             	add    $0x10,%esp
 73c:	8d 50 01             	lea    0x1(%eax),%edx
 73f:	8b 83 44 00 00 00    	mov    0x44(%ebx),%eax
 745:	83 ec 04             	sub    $0x4,%esp
 748:	52                   	push   %edx
 749:	50                   	push   %eax
 74a:	6a 02                	push   $0x2
 74c:	e8 8f fd ff ff       	call   4e0 <write@plt>
 751:	83 c4 10             	add    $0x10,%esp
 754:	83 ec 0c             	sub    $0xc,%esp
 757:	6a 01                	push   $0x1
 759:	e8 52 fd ff ff       	call   4b0 <exit@plt>
 75e:	90                   	nop
 75f:	8b 5d fc             	mov    -0x4(%ebp),%ebx
 762:	c9                   	leave  
 763:	c3                   	ret    

00000764 <change_page_permissions_of_address>:
 764:	55                   	push   %ebp
 765:	89 e5                	mov    %esp,%ebp
 767:	53                   	push   %ebx
 768:	83 ec 14             	sub    $0x14,%esp
 76b:	e8 4d 00 00 00       	call   7bd <__x86.get_pc_thunk.cx>
 770:	81 c1 54 18 00 00    	add    $0x1854,%ecx
 776:	c7 45 f4 00 10 00 00 	movl   $0x1000,-0xc(%ebp)
 77d:	8b 45 08             	mov    0x8(%ebp),%eax
 780:	8b 5d f4             	mov    -0xc(%ebp),%ebx
 783:	ba 00 00 00 00       	mov    $0x0,%edx
 788:	f7 f3                	div    %ebx
 78a:	89 d0                	mov    %edx,%eax
 78c:	f7 d8                	neg    %eax
 78e:	01 45 08             	add    %eax,0x8(%ebp)
 791:	8b 45 f4             	mov    -0xc(%ebp),%eax
 794:	83 ec 04             	sub    $0x4,%esp
 797:	6a 07                	push   $0x7
 799:	50                   	push   %eax
 79a:	ff 75 08             	pushl  0x8(%ebp)
 79d:	89 cb                	mov    %ecx,%ebx
 79f:	e8 dc fc ff ff       	call   480 <mprotect@plt>
 7a4:	83 c4 10             	add    $0x10,%esp
 7a7:	83 f8 ff             	cmp    $0xffffffff,%eax
 7aa:	75 07                	jne    7b3 <change_page_permissions_of_address+0x4f>
 7ac:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
 7b1:	eb 05                	jmp    7b8 <change_page_permissions_of_address+0x54>
 7b3:	b8 00 00 00 00       	mov    $0x0,%eax
 7b8:	8b 5d fc             	mov    -0x4(%ebp),%ebx
 7bb:	c9                   	leave  
 7bc:	c3                   	ret    

000007bd <__x86.get_pc_thunk.cx>:
 7bd:	8b 0c 24             	mov    (%esp),%ecx
 7c0:	c3                   	ret    
 7c1:	66 90                	xchg   %ax,%ax
 7c3:	66 90                	xchg   %ax,%ax
 7c5:	66 90                	xchg   %ax,%ax
 7c7:	66 90                	xchg   %ax,%ax
 7c9:	66 90                	xchg   %ax,%ax
 7cb:	66 90                	xchg   %ax,%ax
 7cd:	66 90                	xchg   %ax,%ax
 7cf:	90                   	nop

000007d0 <__libc_csu_init>:
 7d0:	55                   	push   %ebp
 7d1:	57                   	push   %edi
 7d2:	56                   	push   %esi
 7d3:	53                   	push   %ebx
 7d4:	e8 67 fd ff ff       	call   540 <__x86.get_pc_thunk.bx>
 7d9:	81 c3 eb 17 00 00    	add    $0x17eb,%ebx
 7df:	83 ec 0c             	sub    $0xc,%esp
 7e2:	8b 6c 24 28          	mov    0x28(%esp),%ebp
 7e6:	8d b3 04 ff ff ff    	lea    -0xfc(%ebx),%esi
 7ec:	e8 5b fc ff ff       	call   44c <_init>
 7f1:	8d 83 00 ff ff ff    	lea    -0x100(%ebx),%eax
 7f7:	29 c6                	sub    %eax,%esi
 7f9:	c1 fe 02             	sar    $0x2,%esi
 7fc:	85 f6                	test   %esi,%esi
 7fe:	74 25                	je     825 <__libc_csu_init+0x55>
 800:	31 ff                	xor    %edi,%edi
 802:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
 808:	83 ec 04             	sub    $0x4,%esp
 80b:	55                   	push   %ebp
 80c:	ff 74 24 2c          	pushl  0x2c(%esp)
 810:	ff 74 24 2c          	pushl  0x2c(%esp)
 814:	ff 94 bb 00 ff ff ff 	call   *-0x100(%ebx,%edi,4)
 81b:	83 c7 01             	add    $0x1,%edi
 81e:	83 c4 10             	add    $0x10,%esp
 821:	39 fe                	cmp    %edi,%esi
 823:	75 e3                	jne    808 <__libc_csu_init+0x38>
 825:	83 c4 0c             	add    $0xc,%esp
 828:	5b                   	pop    %ebx
 829:	5e                   	pop    %esi
 82a:	5f                   	pop    %edi
 82b:	5d                   	pop    %ebp
 82c:	c3                   	ret    
 82d:	8d 76 00             	lea    0x0(%esi),%esi

00000830 <__libc_csu_fini>:
 830:	f3 c3                	repz ret 
 832:	66 90                	xchg   %ax,%ax
 834:	66 90                	xchg   %ax,%ax
 836:	66 90                	xchg   %ax,%ax
 838:	66 90                	xchg   %ax,%ax
 83a:	66 90                	xchg   %ax,%ax
 83c:	66 90                	xchg   %ax,%ax
 83e:	66 90                	xchg   %ax,%ax

00000840 <__stack_chk_fail_local>:
 840:	53                   	push   %ebx
 841:	e8 fa fc ff ff       	call   540 <__x86.get_pc_thunk.bx>
 846:	81 c3 7e 17 00 00    	add    $0x177e,%ebx
 84c:	83 ec 08             	sub    $0x8,%esp
 84f:	e8 4c fc ff ff       	call   4a0 <__stack_chk_fail@plt>

Disassembly of section .fini:

00000854 <_fini>:
 854:	53                   	push   %ebx
 855:	83 ec 08             	sub    $0x8,%esp
 858:	e8 e3 fc ff ff       	call   540 <__x86.get_pc_thunk.bx>
 85d:	81 c3 67 17 00 00    	add    $0x1767,%ebx
 863:	83 c4 08             	add    $0x8,%esp
 866:	5b                   	pop    %ebx
 867:	c3                   	ret    
