
smc4.x86.out:     file format elf32-i386


Disassembly of section .init:

0000044c <_init>:
 44c:	53                   	push   %ebx
 44d:	83 ec 08             	sub    $0x8,%esp
 450:	e8 eb 00 00 00       	call   540 <__x86.get_pc_thunk.bx>
 455:	81 c3 6f 1b 00 00    	add    $0x1b6f,%ebx
 45b:	8b 83 30 00 00 00    	mov    0x30(%ebx),%eax
 461:	85 c0                	test   %eax,%eax
 463:	74 05                	je     46a <_init+0x1e>
 465:	e8 8e 00 00 00       	call   4f8 <__gmon_start__@plt>
 46a:	83 c4 08             	add    $0x8,%esp
 46d:	5b                   	pop    %ebx
 46e:	c3                   	ret    

Disassembly of section .plt:

00000470 <.plt>:
 470:	ff b3 04 00 00 00    	pushl  0x4(%ebx)
 476:	ff a3 08 00 00 00    	jmp    *0x8(%ebx)
 47c:	00 00                	add    %al,(%eax)
	...

00000480 <mprotect@plt>:
 480:	ff a3 0c 00 00 00    	jmp    *0xc(%ebx)
 486:	68 00 00 00 00       	push   $0x0
 48b:	e9 e0 ff ff ff       	jmp    470 <.plt>

00000490 <memcpy@plt>:
 490:	ff a3 10 00 00 00    	jmp    *0x10(%ebx)
 496:	68 08 00 00 00       	push   $0x8
 49b:	e9 d0 ff ff ff       	jmp    470 <.plt>

000004a0 <__stack_chk_fail@plt>:
 4a0:	ff a3 14 00 00 00    	jmp    *0x14(%ebx)
 4a6:	68 10 00 00 00       	push   $0x10
 4ab:	e9 c0 ff ff ff       	jmp    470 <.plt>

000004b0 <exit@plt>:
 4b0:	ff a3 18 00 00 00    	jmp    *0x18(%ebx)
 4b6:	68 18 00 00 00       	push   $0x18
 4bb:	e9 b0 ff ff ff       	jmp    470 <.plt>

000004c0 <strlen@plt>:
 4c0:	ff a3 1c 00 00 00    	jmp    *0x1c(%ebx)
 4c6:	68 20 00 00 00       	push   $0x20
 4cb:	e9 a0 ff ff ff       	jmp    470 <.plt>

000004d0 <__libc_start_main@plt>:
 4d0:	ff a3 20 00 00 00    	jmp    *0x20(%ebx)
 4d6:	68 28 00 00 00       	push   $0x28
 4db:	e9 90 ff ff ff       	jmp    470 <.plt>

000004e0 <write@plt>:
 4e0:	ff a3 24 00 00 00    	jmp    *0x24(%ebx)
 4e6:	68 30 00 00 00       	push   $0x30
 4eb:	e9 80 ff ff ff       	jmp    470 <.plt>

Disassembly of section .plt.got:

000004f0 <__cxa_finalize@plt>:
 4f0:	ff a3 2c 00 00 00    	jmp    *0x2c(%ebx)
 4f6:	66 90                	xchg   %ax,%ax

000004f8 <__gmon_start__@plt>:
 4f8:	ff a3 30 00 00 00    	jmp    *0x30(%ebx)
 4fe:	66 90                	xchg   %ax,%ax

Disassembly of section .text:

00000500 <_start>:
 500:	31 ed                	xor    %ebp,%ebp
 502:	5e                   	pop    %esi
 503:	89 e1                	mov    %esp,%ecx
 505:	83 e4 f0             	and    $0xfffffff0,%esp
 508:	50                   	push   %eax
 509:	54                   	push   %esp
 50a:	52                   	push   %edx
 50b:	e8 22 00 00 00       	call   532 <_start+0x32>
 510:	81 c3 b4 1a 00 00    	add    $0x1ab4,%ebx
 516:	8d 83 1c e9 ff ff    	lea    -0x16e4(%ebx),%eax
 51c:	50                   	push   %eax
 51d:	8d 83 bc e8 ff ff    	lea    -0x1744(%ebx),%eax
 523:	50                   	push   %eax
 524:	51                   	push   %ecx
 525:	56                   	push   %esi
 526:	ff b3 34 00 00 00    	pushl  0x34(%ebx)
 52c:	e8 9f ff ff ff       	call   4d0 <__libc_start_main@plt>
 531:	f4                   	hlt    
 532:	8b 1c 24             	mov    (%esp),%ebx
 535:	c3                   	ret    
 536:	66 90                	xchg   %ax,%ax
 538:	66 90                	xchg   %ax,%ax
 53a:	66 90                	xchg   %ax,%ax
 53c:	66 90                	xchg   %ax,%ax
 53e:	66 90                	xchg   %ax,%ax

00000540 <__x86.get_pc_thunk.bx>:
 540:	8b 1c 24             	mov    (%esp),%ebx
 543:	c3                   	ret    
 544:	66 90                	xchg   %ax,%ax
 546:	66 90                	xchg   %ax,%ax
 548:	66 90                	xchg   %ax,%ax
 54a:	66 90                	xchg   %ax,%ax
 54c:	66 90                	xchg   %ax,%ax
 54e:	66 90                	xchg   %ax,%ax

00000550 <deregister_tm_clones>:
 550:	e8 e4 00 00 00       	call   639 <__x86.get_pc_thunk.dx>
 555:	81 c2 6f 1a 00 00    	add    $0x1a6f,%edx
 55b:	8d 8a 90 00 00 00    	lea    0x90(%edx),%ecx
 561:	8d 82 90 00 00 00    	lea    0x90(%edx),%eax
 567:	39 c8                	cmp    %ecx,%eax
 569:	74 1d                	je     588 <deregister_tm_clones+0x38>
 56b:	8b 82 28 00 00 00    	mov    0x28(%edx),%eax
 571:	85 c0                	test   %eax,%eax
 573:	74 13                	je     588 <deregister_tm_clones+0x38>
 575:	55                   	push   %ebp
 576:	89 e5                	mov    %esp,%ebp
 578:	83 ec 14             	sub    $0x14,%esp
 57b:	51                   	push   %ecx
 57c:	ff d0                	call   *%eax
 57e:	83 c4 10             	add    $0x10,%esp
 581:	c9                   	leave  
 582:	c3                   	ret    
 583:	90                   	nop
 584:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
 588:	f3 c3                	repz ret 
 58a:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi

00000590 <register_tm_clones>:
 590:	e8 a4 00 00 00       	call   639 <__x86.get_pc_thunk.dx>
 595:	81 c2 2f 1a 00 00    	add    $0x1a2f,%edx
 59b:	55                   	push   %ebp
 59c:	8d 8a 90 00 00 00    	lea    0x90(%edx),%ecx
 5a2:	8d 82 90 00 00 00    	lea    0x90(%edx),%eax
 5a8:	29 c8                	sub    %ecx,%eax
 5aa:	89 e5                	mov    %esp,%ebp
 5ac:	53                   	push   %ebx
 5ad:	c1 f8 02             	sar    $0x2,%eax
 5b0:	89 c3                	mov    %eax,%ebx
 5b2:	83 ec 04             	sub    $0x4,%esp
 5b5:	c1 eb 1f             	shr    $0x1f,%ebx
 5b8:	01 d8                	add    %ebx,%eax
 5ba:	d1 f8                	sar    %eax
 5bc:	74 14                	je     5d2 <register_tm_clones+0x42>
 5be:	8b 92 38 00 00 00    	mov    0x38(%edx),%edx
 5c4:	85 d2                	test   %edx,%edx
 5c6:	74 0a                	je     5d2 <register_tm_clones+0x42>
 5c8:	83 ec 08             	sub    $0x8,%esp
 5cb:	50                   	push   %eax
 5cc:	51                   	push   %ecx
 5cd:	ff d2                	call   *%edx
 5cf:	83 c4 10             	add    $0x10,%esp
 5d2:	8b 5d fc             	mov    -0x4(%ebp),%ebx
 5d5:	c9                   	leave  
 5d6:	c3                   	ret    
 5d7:	89 f6                	mov    %esi,%esi
 5d9:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

000005e0 <__do_global_dtors_aux>:
 5e0:	55                   	push   %ebp
 5e1:	89 e5                	mov    %esp,%ebp
 5e3:	53                   	push   %ebx
 5e4:	e8 57 ff ff ff       	call   540 <__x86.get_pc_thunk.bx>
 5e9:	81 c3 db 19 00 00    	add    $0x19db,%ebx
 5ef:	83 ec 04             	sub    $0x4,%esp
 5f2:	80 bb 90 00 00 00 00 	cmpb   $0x0,0x90(%ebx)
 5f9:	75 27                	jne    622 <__do_global_dtors_aux+0x42>
 5fb:	8b 83 2c 00 00 00    	mov    0x2c(%ebx),%eax
 601:	85 c0                	test   %eax,%eax
 603:	74 11                	je     616 <__do_global_dtors_aux+0x36>
 605:	83 ec 0c             	sub    $0xc,%esp
 608:	ff b3 40 00 00 00    	pushl  0x40(%ebx)
 60e:	e8 dd fe ff ff       	call   4f0 <__cxa_finalize@plt>
 613:	83 c4 10             	add    $0x10,%esp
 616:	e8 35 ff ff ff       	call   550 <deregister_tm_clones>
 61b:	c6 83 90 00 00 00 01 	movb   $0x1,0x90(%ebx)
 622:	8b 5d fc             	mov    -0x4(%ebp),%ebx
 625:	c9                   	leave  
 626:	c3                   	ret    
 627:	89 f6                	mov    %esi,%esi
 629:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

00000630 <frame_dummy>:
 630:	55                   	push   %ebp
 631:	89 e5                	mov    %esp,%ebp
 633:	5d                   	pop    %ebp
 634:	e9 57 ff ff ff       	jmp    590 <register_tm_clones>

00000639 <__x86.get_pc_thunk.dx>:
 639:	8b 14 24             	mov    (%esp),%edx
 63c:	c3                   	ret    

0000063d <main>:
 63d:	8d 4c 24 04          	lea    0x4(%esp),%ecx
 641:	83 e4 f0             	and    $0xfffffff0,%esp
 644:	ff 71 fc             	pushl  -0x4(%ecx)
 647:	55                   	push   %ebp
 648:	89 e5                	mov    %esp,%ebp
 64a:	53                   	push   %ebx
 64b:	51                   	push   %ecx
 64c:	83 ec 40             	sub    $0x40,%esp
 64f:	e8 ec fe ff ff       	call   540 <__x86.get_pc_thunk.bx>
 654:	81 c3 70 19 00 00    	add    $0x1970,%ebx
 65a:	65 a1 14 00 00 00    	mov    %gs:0x14,%eax
 660:	89 45 f4             	mov    %eax,-0xc(%ebp)
 663:	31 c0                	xor    %eax,%eax
 665:	83 ec 0c             	sub    $0xc,%esp
 668:	8d 83 79 e6 ff ff    	lea    -0x1987(%ebx),%eax
 66e:	50                   	push   %eax
 66f:	e8 46 01 00 00       	call   7ba <get_permission>
 674:	83 c4 10             	add    $0x10,%esp
 677:	8d 83 7c e7 ff ff    	lea    -0x1884(%ebx),%eax
 67d:	89 45 bc             	mov    %eax,-0x44(%ebp)
 680:	8b 83 5c 00 00 00    	mov    0x5c(%ebx),%eax
 686:	89 45 c8             	mov    %eax,-0x38(%ebp)
 689:	8b 83 60 00 00 00    	mov    0x60(%ebx),%eax
 68f:	89 45 cc             	mov    %eax,-0x34(%ebp)
 692:	8b 83 64 00 00 00    	mov    0x64(%ebx),%eax
 698:	89 45 d0             	mov    %eax,-0x30(%ebp)
 69b:	8b 83 68 00 00 00    	mov    0x68(%ebx),%eax
 6a1:	89 45 d4             	mov    %eax,-0x2c(%ebp)
 6a4:	8b 83 6c 00 00 00    	mov    0x6c(%ebx),%eax
 6aa:	89 45 d8             	mov    %eax,-0x28(%ebp)
 6ad:	8b 83 70 00 00 00    	mov    0x70(%ebx),%eax
 6b3:	89 45 dc             	mov    %eax,-0x24(%ebp)
 6b6:	8b 83 74 00 00 00    	mov    0x74(%ebx),%eax
 6bc:	89 45 e0             	mov    %eax,-0x20(%ebp)
 6bf:	8b 83 78 00 00 00    	mov    0x78(%ebx),%eax
 6c5:	89 45 e4             	mov    %eax,-0x1c(%ebp)
 6c8:	8b 83 7c 00 00 00    	mov    0x7c(%ebx),%eax
 6ce:	89 45 e8             	mov    %eax,-0x18(%ebp)
 6d1:	8b 83 80 00 00 00    	mov    0x80(%ebx),%eax
 6d7:	89 45 ec             	mov    %eax,-0x14(%ebp)
 6da:	8b 83 84 00 00 00    	mov    0x84(%ebx),%eax
 6e0:	89 45 f0             	mov    %eax,-0x10(%ebp)
 6e3:	c7 45 b8 00 00 00 00 	movl   $0x0,-0x48(%ebp)
 6ea:	eb 19                	jmp    705 <main+0xc8>
 6ec:	8b 55 b8             	mov    -0x48(%ebp),%edx
 6ef:	8b 45 bc             	mov    -0x44(%ebp),%eax
 6f2:	01 c2                	add    %eax,%edx
 6f4:	8d 4d c8             	lea    -0x38(%ebp),%ecx
 6f7:	8b 45 b8             	mov    -0x48(%ebp),%eax
 6fa:	01 c8                	add    %ecx,%eax
 6fc:	0f b6 00             	movzbl (%eax),%eax
 6ff:	88 02                	mov    %al,(%edx)
 701:	83 45 b8 01          	addl   $0x1,-0x48(%ebp)
 705:	83 7d b8 2b          	cmpl   $0x2b,-0x48(%ebp)
 709:	7e e1                	jle    6ec <main+0xaf>
 70b:	0f b7 83 88 00 00 00 	movzwl 0x88(%ebx),%eax
 712:	66 89 45 c8          	mov    %ax,-0x38(%ebp)
 716:	c7 45 b8 00 00 00 00 	movl   $0x0,-0x48(%ebp)
 71d:	eb 1c                	jmp    73b <main+0xfe>
 71f:	8b 45 b8             	mov    -0x48(%ebp),%eax
 722:	8d 50 2c             	lea    0x2c(%eax),%edx
 725:	8b 45 bc             	mov    -0x44(%ebp),%eax
 728:	01 c2                	add    %eax,%edx
 72a:	8d 4d c8             	lea    -0x38(%ebp),%ecx
 72d:	8b 45 b8             	mov    -0x48(%ebp),%eax
 730:	01 c8                	add    %ecx,%eax
 732:	0f b6 00             	movzbl (%eax),%eax
 735:	88 02                	mov    %al,(%edx)
 737:	83 45 b8 01          	addl   $0x1,-0x48(%ebp)
 73b:	83 7d b8 01          	cmpl   $0x1,-0x48(%ebp)
 73f:	7e de                	jle    71f <main+0xe2>
 741:	8d 83 aa e7 ff ff    	lea    -0x1856(%ebx),%eax
 747:	89 45 c0             	mov    %eax,-0x40(%ebp)
 74a:	8d 83 90 e6 ff ff    	lea    -0x1970(%ebx),%eax
 750:	89 45 bc             	mov    %eax,-0x44(%ebp)
 753:	83 ec 04             	sub    $0x4,%esp
 756:	6a 05                	push   $0x5
 758:	8d 83 8c e9 ff ff    	lea    -0x1674(%ebx),%eax
 75e:	50                   	push   %eax
 75f:	8d 45 c8             	lea    -0x38(%ebp),%eax
 762:	50                   	push   %eax
 763:	e8 28 fd ff ff       	call   490 <memcpy@plt>
 768:	83 c4 10             	add    $0x10,%esp
 76b:	90                   	nop
 76c:	83 45 c4 01          	addl   $0x1,-0x3c(%ebp)
 770:	83 45 c4 01          	addl   $0x1,-0x3c(%ebp)
 774:	83 45 c4 01          	addl   $0x1,-0x3c(%ebp)
 778:	83 45 c4 01          	addl   $0x1,-0x3c(%ebp)
 77c:	83 45 c4 01          	addl   $0x1,-0x3c(%ebp)
 780:	83 45 c4 01          	addl   $0x1,-0x3c(%ebp)
 784:	83 45 c4 01          	addl   $0x1,-0x3c(%ebp)
 788:	83 45 c4 01          	addl   $0x1,-0x3c(%ebp)
 78c:	83 45 c4 01          	addl   $0x1,-0x3c(%ebp)
 790:	83 45 c4 01          	addl   $0x1,-0x3c(%ebp)
 794:	d1 65 c4             	shll   -0x3c(%ebp)
 797:	d1 65 c4             	shll   -0x3c(%ebp)
 79a:	b8 00 00 00 00       	mov    $0x0,%eax
 79f:	8b 4d f4             	mov    -0xc(%ebp),%ecx
 7a2:	65 33 0d 14 00 00 00 	xor    %gs:0x14,%ecx
 7a9:	74 05                	je     7b0 <main+0x173>
 7ab:	e8 40 01 00 00       	call   8f0 <__stack_chk_fail_local>
 7b0:	8d 65 f8             	lea    -0x8(%ebp),%esp
 7b3:	59                   	pop    %ecx
 7b4:	5b                   	pop    %ebx
 7b5:	5d                   	pop    %ebp
 7b6:	8d 61 fc             	lea    -0x4(%ecx),%esp
 7b9:	c3                   	ret    

000007ba <get_permission>:
 7ba:	55                   	push   %ebp
 7bb:	89 e5                	mov    %esp,%ebp
 7bd:	53                   	push   %ebx
 7be:	83 ec 04             	sub    $0x4,%esp
 7c1:	e8 7a fd ff ff       	call   540 <__x86.get_pc_thunk.bx>
 7c6:	81 c3 fe 17 00 00    	add    $0x17fe,%ebx
 7cc:	83 ec 0c             	sub    $0xc,%esp
 7cf:	ff 75 08             	pushl  0x8(%ebp)
 7d2:	e8 42 00 00 00       	call   819 <change_page_permissions_of_address>
 7d7:	83 c4 10             	add    $0x10,%esp
 7da:	83 f8 ff             	cmp    $0xffffffff,%eax
 7dd:	75 34                	jne    813 <get_permission+0x59>
 7df:	8b 83 8c 00 00 00    	mov    0x8c(%ebx),%eax
 7e5:	83 ec 0c             	sub    $0xc,%esp
 7e8:	50                   	push   %eax
 7e9:	e8 d2 fc ff ff       	call   4c0 <strlen@plt>
 7ee:	83 c4 10             	add    $0x10,%esp
 7f1:	8d 50 01             	lea    0x1(%eax),%edx
 7f4:	8b 83 8c 00 00 00    	mov    0x8c(%ebx),%eax
 7fa:	83 ec 04             	sub    $0x4,%esp
 7fd:	52                   	push   %edx
 7fe:	50                   	push   %eax
 7ff:	6a 02                	push   $0x2
 801:	e8 da fc ff ff       	call   4e0 <write@plt>
 806:	83 c4 10             	add    $0x10,%esp
 809:	83 ec 0c             	sub    $0xc,%esp
 80c:	6a 01                	push   $0x1
 80e:	e8 9d fc ff ff       	call   4b0 <exit@plt>
 813:	90                   	nop
 814:	8b 5d fc             	mov    -0x4(%ebp),%ebx
 817:	c9                   	leave  
 818:	c3                   	ret    

00000819 <change_page_permissions_of_address>:
 819:	55                   	push   %ebp
 81a:	89 e5                	mov    %esp,%ebp
 81c:	53                   	push   %ebx
 81d:	83 ec 14             	sub    $0x14,%esp
 820:	e8 4d 00 00 00       	call   872 <__x86.get_pc_thunk.cx>
 825:	81 c1 9f 17 00 00    	add    $0x179f,%ecx
 82b:	c7 45 f4 00 10 00 00 	movl   $0x1000,-0xc(%ebp)
 832:	8b 45 08             	mov    0x8(%ebp),%eax
 835:	8b 5d f4             	mov    -0xc(%ebp),%ebx
 838:	ba 00 00 00 00       	mov    $0x0,%edx
 83d:	f7 f3                	div    %ebx
 83f:	89 d0                	mov    %edx,%eax
 841:	f7 d8                	neg    %eax
 843:	01 45 08             	add    %eax,0x8(%ebp)
 846:	8b 45 f4             	mov    -0xc(%ebp),%eax
 849:	83 ec 04             	sub    $0x4,%esp
 84c:	6a 07                	push   $0x7
 84e:	50                   	push   %eax
 84f:	ff 75 08             	pushl  0x8(%ebp)
 852:	89 cb                	mov    %ecx,%ebx
 854:	e8 27 fc ff ff       	call   480 <mprotect@plt>
 859:	83 c4 10             	add    $0x10,%esp
 85c:	83 f8 ff             	cmp    $0xffffffff,%eax
 85f:	75 07                	jne    868 <change_page_permissions_of_address+0x4f>
 861:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
 866:	eb 05                	jmp    86d <change_page_permissions_of_address+0x54>
 868:	b8 00 00 00 00       	mov    $0x0,%eax
 86d:	8b 5d fc             	mov    -0x4(%ebp),%ebx
 870:	c9                   	leave  
 871:	c3                   	ret    

00000872 <__x86.get_pc_thunk.cx>:
 872:	8b 0c 24             	mov    (%esp),%ecx
 875:	c3                   	ret    
 876:	66 90                	xchg   %ax,%ax
 878:	66 90                	xchg   %ax,%ax
 87a:	66 90                	xchg   %ax,%ax
 87c:	66 90                	xchg   %ax,%ax
 87e:	66 90                	xchg   %ax,%ax

00000880 <__libc_csu_init>:
 880:	55                   	push   %ebp
 881:	57                   	push   %edi
 882:	56                   	push   %esi
 883:	53                   	push   %ebx
 884:	e8 b7 fc ff ff       	call   540 <__x86.get_pc_thunk.bx>
 889:	81 c3 3b 17 00 00    	add    $0x173b,%ebx
 88f:	83 ec 0c             	sub    $0xc,%esp
 892:	8b 6c 24 28          	mov    0x28(%esp),%ebp
 896:	8d b3 04 ff ff ff    	lea    -0xfc(%ebx),%esi
 89c:	e8 ab fb ff ff       	call   44c <_init>
 8a1:	8d 83 00 ff ff ff    	lea    -0x100(%ebx),%eax
 8a7:	29 c6                	sub    %eax,%esi
 8a9:	c1 fe 02             	sar    $0x2,%esi
 8ac:	85 f6                	test   %esi,%esi
 8ae:	74 25                	je     8d5 <__libc_csu_init+0x55>
 8b0:	31 ff                	xor    %edi,%edi
 8b2:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
 8b8:	83 ec 04             	sub    $0x4,%esp
 8bb:	55                   	push   %ebp
 8bc:	ff 74 24 2c          	pushl  0x2c(%esp)
 8c0:	ff 74 24 2c          	pushl  0x2c(%esp)
 8c4:	ff 94 bb 00 ff ff ff 	call   *-0x100(%ebx,%edi,4)
 8cb:	83 c7 01             	add    $0x1,%edi
 8ce:	83 c4 10             	add    $0x10,%esp
 8d1:	39 fe                	cmp    %edi,%esi
 8d3:	75 e3                	jne    8b8 <__libc_csu_init+0x38>
 8d5:	83 c4 0c             	add    $0xc,%esp
 8d8:	5b                   	pop    %ebx
 8d9:	5e                   	pop    %esi
 8da:	5f                   	pop    %edi
 8db:	5d                   	pop    %ebp
 8dc:	c3                   	ret    
 8dd:	8d 76 00             	lea    0x0(%esi),%esi

000008e0 <__libc_csu_fini>:
 8e0:	f3 c3                	repz ret 
 8e2:	66 90                	xchg   %ax,%ax
 8e4:	66 90                	xchg   %ax,%ax
 8e6:	66 90                	xchg   %ax,%ax
 8e8:	66 90                	xchg   %ax,%ax
 8ea:	66 90                	xchg   %ax,%ax
 8ec:	66 90                	xchg   %ax,%ax
 8ee:	66 90                	xchg   %ax,%ax

000008f0 <__stack_chk_fail_local>:
 8f0:	53                   	push   %ebx
 8f1:	e8 4a fc ff ff       	call   540 <__x86.get_pc_thunk.bx>
 8f6:	81 c3 ce 16 00 00    	add    $0x16ce,%ebx
 8fc:	83 ec 08             	sub    $0x8,%esp
 8ff:	e8 9c fb ff ff       	call   4a0 <__stack_chk_fail@plt>

Disassembly of section .fini:

00000904 <_fini>:
 904:	53                   	push   %ebx
 905:	83 ec 08             	sub    $0x8,%esp
 908:	e8 33 fc ff ff       	call   540 <__x86.get_pc_thunk.bx>
 90d:	81 c3 b7 16 00 00    	add    $0x16b7,%ebx
 913:	83 c4 08             	add    $0x8,%esp
 916:	5b                   	pop    %ebx
 917:	c3                   	ret    
